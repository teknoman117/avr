Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
                              ./main.o (__udivmodhi4)
/opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o (exit)
/opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
                              ./usitwislave.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

overflow_state_t    0x1               ./usitwislave.o
slave_address       0x1               ./usitwislave.o
startstop_state_t   0x1               ./usitwislave.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
LOAD ./main.o
LOAD ./usitwislave.o
START GROUP
LOAD /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/libm.a
LOAD /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x536
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0xc /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002a       0x10 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
                0x000000000000002a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000003a        0x4 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
 *(.init9)
 *(.text)
 .text          0x000000000000003e        0x2 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
                0x000000000000003e                __vector_1
                0x000000000000003e                __vector_12
                0x000000000000003e                __bad_interrupt
                0x000000000000003e                __vector_6
                0x000000000000003e                __vector_3
                0x000000000000003e                __vector_11
                0x000000000000003e                __vector_7
                0x000000000000003e                __vector_5
                0x000000000000003e                __vector_4
                0x000000000000003e                __vector_9
                0x000000000000003e                __vector_2
                0x000000000000003e                __vector_8
                0x000000000000003e                __vector_10
 .text          0x0000000000000040       0xfa ./main.o
 .text          0x000000000000013a      0x3a0 ./usitwislave.o
                0x000000000000013a                __vector_13
                0x00000000000001da                __vector_14
                0x0000000000000340                usi_twi_slave
                0x0000000000000468                usi_twi_enable_stats
                0x000000000000049e                usi_twi_stats_start_conditions
                0x00000000000004a8                usi_twi_stats_stop_conditions
                0x00000000000004b2                usi_twi_stats_error_conditions
                0x00000000000004bc                usi_twi_stats_overflow_conditions
                0x00000000000004c6                usi_twi_stats_local_frames
                0x00000000000004d0                usi_twi_stats_idle_calls
 .text          0x00000000000004da        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000004da        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text          0x00000000000004da        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
                0x00000000000004da                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000004da       0x30 ./main.o
                0x00000000000004da                main
 .text.libgcc.mul
                0x000000000000050a        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000050a       0x28 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
                0x000000000000050a                __udivmodhi4
 .text.libgcc   0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000532                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000532        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
                0x0000000000000532                exit
                0x0000000000000532                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000532        0x4 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000536                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000536
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./usitwislave.o
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x59
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060       0x56 ./usitwislave.o
 .bss           0x00000000008000b6        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008000b6        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .bss           0x00000000008000b6        0x0 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000b6        0x3 ./usitwislave.o
                0x00000000008000b6                overflow_state_t
                0x00000000008000b7                slave_address
                0x00000000008000b8                startstop_state_t
                0x00000000008000b9                PROVIDE (__bss_end, .)
                0x0000000000000536                __data_load_start = LOADADDR (.data)
                0x0000000000000536                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000b9        0x0
                0x00000000008000b9                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000b9                PROVIDE (__noinit_end, .)
                0x00000000008000b9                _end = .
                0x00000000008000b9                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /opt/cross/avr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr25/crttn85.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./usitwislave.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x0000000000000020       0x20 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000040       0x20 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x1ad
 *(.debug_info)
 .debug_info    0x0000000000000000       0x8f /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .debug_info    0x000000000000008f       0x8f /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .debug_info    0x000000000000011e       0x8f /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000       0x3c
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x14 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x0000000000000014       0x14 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000028       0x14 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0x147
 *(.debug_line)
 .debug_line    0x0000000000000000       0x77 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_udivmodhi4.o)
 .debug_line    0x0000000000000077       0x65 /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_exit.o)
 .debug_line    0x00000000000000dc       0x6b /opt/cross/avr/lib/gcc/avr/4.8.2/avr25/libgcc.a(_clear_bss.o)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(I2CSonar.elf elf32-avr)
LOAD linker stubs
