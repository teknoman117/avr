GAS LISTING /tmp/cczSPmsl.s 			page 1


   1               		.file	"mmc.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/home/robotdude/Projects/AVR_Projects/SD Card Projects/FlashFS/",100,0,2,.Ltext0
  11               		.stabs	"mmc.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.3/../../../avr/include/avr/io.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.3.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.3.3/../../../avr/include/inttypes.h",130,0,0,0
  33               		.stabs	"/usr/lib/gcc/avr/4.3.3/../../../avr/include/stdint.h",130,0,0,0
  34               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  35               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  36               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  37               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  38               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  39               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  40               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  41               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  42               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  43               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  44               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  45               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  46               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  47               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  48               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  49               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  50               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  51               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  52               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  53               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  54               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  55               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  56               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  57               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
GAS LISTING /tmp/cczSPmsl.s 			page 2


  58               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  59               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  60               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  61               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.3.3/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(5,1)=(5,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,219,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabs	"mmc_command:F(4,2)",36,0,36,mmc_command
  72               		.stabs	"befF:P(4,2)",64,0,36,16
  73               		.stabs	"befH:P(4,2)",64,0,36,12
  74               	.global	mmc_command
  75               		.type	mmc_command, @function
  76               	mmc_command:
  77               		.stabd	46,0,0
   1:mmc.c         **** /*
   2:mmc.c         ****  *      mmc.c
   3:mmc.c         ****  *
   4:mmc.c         ****  *      Copyright 2010 Nathaniel Robert Lewis <linux.robotdude@gmail.com>
   5:mmc.c         ****  *
   6:mmc.c         ****  *      This program is free software; you can redistribute it and/or modify
   7:mmc.c         ****  *      it under the terms of the GNU General Public License as published by
   8:mmc.c         ****  *      the Free Software Foundation; either version 2 of the License, or
   9:mmc.c         ****  *      (at your option) any later version.
  10:mmc.c         ****  *
  11:mmc.c         ****  *      This program is distributed in the hope that it will be useful,
  12:mmc.c         ****  *      but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:mmc.c         ****  *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:mmc.c         ****  *      GNU General Public License for more details.
  15:mmc.c         ****  *
  16:mmc.c         ****  *      You should have received a copy of the GNU General Public License
  17:mmc.c         ****  *      along with this program; if not, write to the Free Software
  18:mmc.c         ****  *      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  19:mmc.c         ****  *      MA 02110-1301, USA.
  20:mmc.c         ****  */
  21:mmc.c         **** 
  22:mmc.c         **** #include <avr/io.h>
  23:mmc.c         **** #include "mmc.h"
  24:mmc.c         **** #include "spi.h"
  25:mmc.c         **** 
  26:mmc.c         **** char init_mmc ( void ) {
  27:mmc.c         **** 	char i;
  28:mmc.c         **** 	PORTB |= (1 << PORTB4);
  29:mmc.c         **** 	for(i=0; i < 10; i++) spi_transfer(0xFF); // send 10*8=80 clock pulses
  30:mmc.c         **** 	PORTB &= ~(1 << PORTB4);          // enable MMC
  31:mmc.c         **** 	if (mmc_command(0x40,0x95,0,0) != 1) return 0; // reset MMC
  32:mmc.c         **** 	while( mmc_command(0x41,0xFF,0,0) != 0 );
  33:mmc.c         **** 	return 1;
  34:mmc.c         **** }
  35:mmc.c         **** 
  36:mmc.c         **** uint8_t mmc_command( uint8_t befF, uint8_t befH, uint16_t AdrH, uint16_t AdrL ) {
  78               		.stabn	68,0,36,.LM0-.LFBB1
GAS LISTING /tmp/cczSPmsl.s 			page 3


  79               	.LM0:
  80               	.LFBB1:
  81 0000 CF92      		push r12
  82 0002 DF92      		push r13
  83 0004 EF92      		push r14
  84 0006 FF92      		push r15
  85 0008 0F93      		push r16
  86 000a 1F93      		push r17
  87               	/* prologue: function */
  88               	/* frame size = 0 */
  89 000c 082F      		mov r16,r24
  90 000e C62E      		mov r12,r22
  91 0010 E42E      		mov r14,r20
  92 0012 152F      		mov r17,r21
  93 0014 D22E      		mov r13,r18
  94 0016 F32E      		mov r15,r19
  37:mmc.c         **** 	spi_transfer(0xFF);
  95               		.stabn	68,0,37,.LM1-.LFBB1
  96               	.LM1:
  97 0018 8FEF      		ldi r24,lo8(-1)
  98 001a 0E94 0000 		call spi_transfer
  38:mmc.c         **** 	spi_transfer(befF);
  99               		.stabn	68,0,38,.LM2-.LFBB1
 100               	.LM2:
 101 001e 802F      		mov r24,r16
 102 0020 0E94 0000 		call spi_transfer
  39:mmc.c         **** 	spi_transfer((uint8_t)(AdrH >> 8));
 103               		.stabn	68,0,39,.LM3-.LFBB1
 104               	.LM3:
 105 0024 812F      		mov r24,r17
 106 0026 0E94 0000 		call spi_transfer
  40:mmc.c         **** 	spi_transfer((uint8_t)AdrH);
 107               		.stabn	68,0,40,.LM4-.LFBB1
 108               	.LM4:
 109 002a 8E2D      		mov r24,r14
 110 002c 0E94 0000 		call spi_transfer
  41:mmc.c         **** 	spi_transfer((uint8_t)(AdrL >> 8));
 111               		.stabn	68,0,41,.LM5-.LFBB1
 112               	.LM5:
 113 0030 8F2D      		mov r24,r15
 114 0032 0E94 0000 		call spi_transfer
  42:mmc.c         **** 	spi_transfer((uint8_t)AdrL);
 115               		.stabn	68,0,42,.LM6-.LFBB1
 116               	.LM6:
 117 0036 8D2D      		mov r24,r13
 118 0038 0E94 0000 		call spi_transfer
  43:mmc.c         **** 	spi_transfer(befH);
 119               		.stabn	68,0,43,.LM7-.LFBB1
 120               	.LM7:
 121 003c 8C2D      		mov r24,r12
 122 003e 0E94 0000 		call spi_transfer
  44:mmc.c         **** 	spi_transfer(0xFF);
 123               		.stabn	68,0,44,.LM8-.LFBB1
 124               	.LM8:
 125 0042 8FEF      		ldi r24,lo8(-1)
 126 0044 0E94 0000 		call spi_transfer
  45:mmc.c         **** 	return spi_transfer(0xFF);	// return the last received character
GAS LISTING /tmp/cczSPmsl.s 			page 4


 127               		.stabn	68,0,45,.LM9-.LFBB1
 128               	.LM9:
 129 0048 8FEF      		ldi r24,lo8(-1)
 130 004a 0E94 0000 		call spi_transfer
 131               	/* epilogue start */
  46:mmc.c         **** }
 132               		.stabn	68,0,46,.LM10-.LFBB1
 133               	.LM10:
 134 004e 1F91      		pop r17
 135 0050 0F91      		pop r16
 136 0052 FF90      		pop r15
 137 0054 EF90      		pop r14
 138 0056 DF90      		pop r13
 139 0058 CF90      		pop r12
 140 005a 0895      		ret
 141               		.size	mmc_command, .-mmc_command
 142               	.Lscope1:
 143               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 144               		.stabd	78,0,0
 145               		.stabs	"mmc_writeblock:F(0,2)",36,0,81,mmc_writeblock
 146               		.stabs	"address:P(4,6)",64,0,81,14
 147               		.stabs	"sector:P(0,16)=*(4,2)",64,0,81,12
 148               	.global	mmc_writeblock
 149               		.type	mmc_writeblock, @function
 150               	mmc_writeblock:
 151               		.stabd	46,0,0
  47:mmc.c         **** 
  48:mmc.c         **** char mmc_readblock( uint32_t address, uint8_t *sector ) {
  49:mmc.c         **** 	uint16_t al = address & 0x0000FFFF;
  50:mmc.c         **** 	uint16_t ah = (address >> 16) & 0x0000FFFF;
  51:mmc.c         **** 	uint8_t r1 =  mmc_command(0x51, 0xFF, ah, al);
  52:mmc.c         **** 	for (al = 0; al < 50000; al++) {
  53:mmc.c         **** 		if (r1 == 0) break;
  54:mmc.c         **** 		r1 = spi_transfer(0xFF);
  55:mmc.c         **** 	}
  56:mmc.c         **** 	if (r1 != 0) return 1;
  57:mmc.c         **** 	while(spi_transfer(0xFF) != 0xFE);
  58:mmc.c         **** 	for(al=0; al < 512; al++) sector[al] = spi_transfer(0xFF);
  59:mmc.c         **** 	spi_transfer(0xFF);
  60:mmc.c         **** 	spi_transfer(0xFF);
  61:mmc.c         **** 	return 0;
  62:mmc.c         **** }
  63:mmc.c         **** 
  64:mmc.c         **** char mmc_readpartialblock( uint32_t address, uint16_t count, uint8_t *sector ) {
  65:mmc.c         **** 	uint16_t al = address & 0x0000FFFF;
  66:mmc.c         **** 	uint16_t ah = (address >> 16) & 0x0000FFFF;
  67:mmc.c         **** 	uint8_t r1 =  mmc_command(0x51, 0xFF, ah, al);
  68:mmc.c         **** 	for (al = 0; al < 50000; al++) {
  69:mmc.c         **** 		if (r1 == 0) break;
  70:mmc.c         **** 		r1 = spi_transfer(0xFF);
  71:mmc.c         **** 	}
  72:mmc.c         **** 	if (r1 != 0) return 1;
  73:mmc.c         **** 	while(spi_transfer(0xFF) != 0xFE);
  74:mmc.c         **** 	for(al=0; al < count; al++) sector[al] = spi_transfer(0xFF);
  75:mmc.c         **** 	for(;al<512;al++) spi_transfer(0xFF);
  76:mmc.c         **** 	spi_transfer(0xFF);
  77:mmc.c         **** 	spi_transfer(0xFF);
GAS LISTING /tmp/cczSPmsl.s 			page 5


  78:mmc.c         **** 	return 0;
  79:mmc.c         **** }
  80:mmc.c         **** 
  81:mmc.c         **** char mmc_writeblock( uint32_t address, uint8_t *sector ) {
 152               		.stabn	68,0,81,.LM11-.LFBB2
 153               	.LM11:
 154               	.LFBB2:
 155 005c CF92      		push r12
 156 005e DF92      		push r13
 157 0060 EF92      		push r14
 158 0062 FF92      		push r15
 159 0064 0F93      		push r16
 160 0066 1F93      		push r17
 161 0068 CF93      		push r28
 162 006a DF93      		push r29
 163               	/* prologue: function */
 164               	/* frame size = 0 */
 165 006c 7B01      		movw r14,r22
 166 006e 8C01      		movw r16,r24
 167 0070 6A01      		movw r12,r20
  82:mmc.c         **** 	uint8_t c;
  83:mmc.c         **** 	uint16_t al = address & 0x0000FFFF;
  84:mmc.c         **** 	uint16_t ah = (address >> 16) & 0x0000FFFF;
  85:mmc.c         **** 	uint8_t r1 =  mmc_command(0x58, 0xFF, ah, al);
 168               		.stabn	68,0,85,.LM12-.LFBB2
 169               	.LM12:
 170 0072 9801      		movw r18,r16
 171 0074 4427      		clr r20
 172 0076 5527      		clr r21
 173 0078 88E5      		ldi r24,lo8(88)
 174 007a 6FEF      		ldi r22,lo8(-1)
 175 007c A901      		movw r20,r18
 176 007e 9701      		movw r18,r14
 177 0080 0E94 0000 		call mmc_command
 178 0084 C0E0      		ldi r28,lo8(0)
 179 0086 D0E0      		ldi r29,hi8(0)
 180               	.L5:
  86:mmc.c         **** 	for (al = 0; al < 50000; al++) {
  87:mmc.c         **** 		if (r1 == 0) break;
 181               		.stabn	68,0,87,.LM13-.LFBB2
 182               	.LM13:
 183 0088 8823      		tst r24
 184 008a 01F0      		breq .L4
  88:mmc.c         **** 		r1 = spi_transfer(0xFF);
 185               		.stabn	68,0,88,.LM14-.LFBB2
 186               	.LM14:
 187 008c 8FEF      		ldi r24,lo8(-1)
 188 008e 0E94 0000 		call spi_transfer
 189               		.stabn	68,0,86,.LM15-.LFBB2
 190               	.LM15:
 191 0092 2196      		adiw r28,1
 192 0094 93EC      		ldi r25,hi8(-15536)
 193 0096 C035      		cpi r28,lo8(-15536)
 194 0098 D907      		cpc r29,r25
 195 009a 01F4      		brne .L5
  89:mmc.c         **** 	}
  90:mmc.c         **** 	if (r1 != 0) return 1;
GAS LISTING /tmp/cczSPmsl.s 			page 6


 196               		.stabn	68,0,90,.LM16-.LFBB2
 197               	.LM16:
 198 009c 8823      		tst r24
 199 009e 01F0      		breq .L4
 200 00a0 81E0      		ldi r24,lo8(1)
 201 00a2 00C0      		rjmp .L6
 202               	.L4:
  91:mmc.c         **** 	spi_transfer(0xFF);
 203               		.stabn	68,0,91,.LM17-.LFBB2
 204               	.LM17:
 205 00a4 8FEF      		ldi r24,lo8(-1)
 206 00a6 0E94 0000 		call spi_transfer
  92:mmc.c         **** 	spi_transfer(0xFF);
 207               		.stabn	68,0,92,.LM18-.LFBB2
 208               	.LM18:
 209 00aa 8FEF      		ldi r24,lo8(-1)
 210 00ac 0E94 0000 		call spi_transfer
  93:mmc.c         **** 	spi_transfer(0xFE);
 211               		.stabn	68,0,93,.LM19-.LFBB2
 212               	.LM19:
 213 00b0 8EEF      		ldi r24,lo8(-2)
 214 00b2 0E94 0000 		call spi_transfer
 215 00b6 C0E0      		ldi r28,lo8(0)
 216 00b8 D0E0      		ldi r29,hi8(0)
 217               	.L7:
  94:mmc.c         **** 	for (al=0;al<512;al++) spi_transfer( sector[al] );
 218               		.stabn	68,0,94,.LM20-.LFBB2
 219               	.LM20:
 220 00ba F601      		movw r30,r12
 221 00bc EC0F      		add r30,r28
 222 00be FD1F      		adc r31,r29
 223 00c0 8081      		ld r24,Z
 224 00c2 0E94 0000 		call spi_transfer
 225 00c6 2196      		adiw r28,1
 226 00c8 82E0      		ldi r24,hi8(512)
 227 00ca C030      		cpi r28,lo8(512)
 228 00cc D807      		cpc r29,r24
 229 00ce 01F4      		brne .L7
  95:mmc.c         **** 	spi_transfer(0xFF);
 230               		.stabn	68,0,95,.LM21-.LFBB2
 231               	.LM21:
 232 00d0 8FEF      		ldi r24,lo8(-1)
 233 00d2 0E94 0000 		call spi_transfer
  96:mmc.c         **** 	spi_transfer(0xFF);
 234               		.stabn	68,0,96,.LM22-.LFBB2
 235               	.LM22:
 236 00d6 8FEF      		ldi r24,lo8(-1)
 237 00d8 0E94 0000 		call spi_transfer
  97:mmc.c         **** 	c = spi_transfer(0xFF);
 238               		.stabn	68,0,97,.LM23-.LFBB2
 239               	.LM23:
 240 00dc 8FEF      		ldi r24,lo8(-1)
 241 00de 0E94 0000 		call spi_transfer
  98:mmc.c         **** 	c &= 0x1F;
  99:mmc.c         **** 	if (c != 0x05) return 2;
 242               		.stabn	68,0,99,.LM24-.LFBB2
 243               	.LM24:
GAS LISTING /tmp/cczSPmsl.s 			page 7


 244 00e2 8F71      		andi r24,lo8(31)
 245 00e4 8530      		cpi r24,lo8(5)
 246 00e6 01F0      		breq .L10
 247 00e8 82E0      		ldi r24,lo8(2)
 248 00ea 00C0      		rjmp .L6
 249               	.L10:
 100:mmc.c         **** 	while(spi_transfer(0xFF) != 0xFF);
 250               		.stabn	68,0,100,.LM25-.LFBB2
 251               	.LM25:
 252 00ec 8FEF      		ldi r24,lo8(-1)
 253 00ee 0E94 0000 		call spi_transfer
 254 00f2 8F3F      		cpi r24,lo8(-1)
 255 00f4 01F4      		brne .L10
 256 00f6 80E0      		ldi r24,lo8(0)
 257               	.L6:
 258               	/* epilogue start */
 101:mmc.c         **** 	return 0;
 102:mmc.c         **** }
 259               		.stabn	68,0,102,.LM26-.LFBB2
 260               	.LM26:
 261 00f8 DF91      		pop r29
 262 00fa CF91      		pop r28
 263 00fc 1F91      		pop r17
 264 00fe 0F91      		pop r16
 265 0100 FF90      		pop r15
 266 0102 EF90      		pop r14
 267 0104 DF90      		pop r13
 268 0106 CF90      		pop r12
 269 0108 0895      		ret
 270               		.size	mmc_writeblock, .-mmc_writeblock
 271               		.stabs	"r1:r(4,2)",64,0,85,24
 272               		.stabn	192,0,0,.LFBB2-.LFBB2
 273               		.stabn	224,0,0,.Lscope2-.LFBB2
 274               	.Lscope2:
 275               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 276               		.stabd	78,0,0
 277               		.stabs	"mmc_readpartialblock:F(0,2)",36,0,64,mmc_readpartialblock
 278               		.stabs	"address:P(4,6)",64,0,64,14
 279               		.stabs	"count:P(4,4)",64,0,64,12
 280               		.stabs	"sector:P(0,16)",64,0,64,10
 281               	.global	mmc_readpartialblock
 282               		.type	mmc_readpartialblock, @function
 283               	mmc_readpartialblock:
 284               		.stabd	46,0,0
 285               		.stabn	68,0,64,.LM27-.LFBB3
 286               	.LM27:
 287               	.LFBB3:
 288 010a AF92      		push r10
 289 010c BF92      		push r11
 290 010e CF92      		push r12
 291 0110 DF92      		push r13
 292 0112 EF92      		push r14
 293 0114 FF92      		push r15
 294 0116 0F93      		push r16
 295 0118 1F93      		push r17
 296 011a CF93      		push r28
 297 011c DF93      		push r29
GAS LISTING /tmp/cczSPmsl.s 			page 8


 298               	/* prologue: function */
 299               	/* frame size = 0 */
 300 011e 7B01      		movw r14,r22
 301 0120 8C01      		movw r16,r24
 302 0122 6A01      		movw r12,r20
 303 0124 5901      		movw r10,r18
 304               		.stabn	68,0,67,.LM28-.LFBB3
 305               	.LM28:
 306 0126 9801      		movw r18,r16
 307 0128 4427      		clr r20
 308 012a 5527      		clr r21
 309 012c 81E5      		ldi r24,lo8(81)
 310 012e 6FEF      		ldi r22,lo8(-1)
 311 0130 A901      		movw r20,r18
 312 0132 9701      		movw r18,r14
 313 0134 0E94 0000 		call mmc_command
 314 0138 C0E0      		ldi r28,lo8(0)
 315 013a D0E0      		ldi r29,hi8(0)
 316               	.L16:
 317               		.stabn	68,0,69,.LM29-.LFBB3
 318               	.LM29:
 319 013c 8823      		tst r24
 320 013e 01F0      		breq .L23
 321               		.stabn	68,0,70,.LM30-.LFBB3
 322               	.LM30:
 323 0140 8FEF      		ldi r24,lo8(-1)
 324 0142 0E94 0000 		call spi_transfer
 325               		.stabn	68,0,68,.LM31-.LFBB3
 326               	.LM31:
 327 0146 2196      		adiw r28,1
 328 0148 93EC      		ldi r25,hi8(-15536)
 329 014a C035      		cpi r28,lo8(-15536)
 330 014c D907      		cpc r29,r25
 331 014e 01F4      		brne .L16
 332               		.stabn	68,0,72,.LM32-.LFBB3
 333               	.LM32:
 334 0150 8823      		tst r24
 335 0152 01F0      		breq .L23
 336 0154 81E0      		ldi r24,lo8(1)
 337 0156 00C0      		rjmp .L17
 338               	.L23:
 339               		.stabn	68,0,73,.LM33-.LFBB3
 340               	.LM33:
 341 0158 8FEF      		ldi r24,lo8(-1)
 342 015a 0E94 0000 		call spi_transfer
 343 015e 8E3F      		cpi r24,lo8(-2)
 344 0160 01F4      		brne .L23
 345 0162 C0E0      		ldi r28,lo8(0)
 346 0164 D0E0      		ldi r29,hi8(0)
 347 0166 00C0      		rjmp .L18
 348               	.L19:
 349               		.stabn	68,0,74,.LM34-.LFBB3
 350               	.LM34:
 351 0168 8FEF      		ldi r24,lo8(-1)
 352 016a 0E94 0000 		call spi_transfer
 353 016e F501      		movw r30,r10
 354 0170 EC0F      		add r30,r28
GAS LISTING /tmp/cczSPmsl.s 			page 9


 355 0172 FD1F      		adc r31,r29
 356 0174 8083      		st Z,r24
 357 0176 2196      		adiw r28,1
 358               	.L18:
 359 0178 CC15      		cp r28,r12
 360 017a DD05      		cpc r29,r13
 361 017c 00F0      		brlo .L19
 362 017e E601      		movw r28,r12
 363 0180 00C0      		rjmp .L20
 364               	.L21:
 365               		.stabn	68,0,75,.LM35-.LFBB3
 366               	.LM35:
 367 0182 8FEF      		ldi r24,lo8(-1)
 368 0184 0E94 0000 		call spi_transfer
 369 0188 2196      		adiw r28,1
 370               	.L20:
 371 018a 82E0      		ldi r24,hi8(512)
 372 018c C030      		cpi r28,lo8(512)
 373 018e D807      		cpc r29,r24
 374 0190 00F0      		brlo .L21
 375               		.stabn	68,0,76,.LM36-.LFBB3
 376               	.LM36:
 377 0192 8FEF      		ldi r24,lo8(-1)
 378 0194 0E94 0000 		call spi_transfer
 379               		.stabn	68,0,77,.LM37-.LFBB3
 380               	.LM37:
 381 0198 8FEF      		ldi r24,lo8(-1)
 382 019a 0E94 0000 		call spi_transfer
 383 019e 80E0      		ldi r24,lo8(0)
 384               	.L17:
 385               	/* epilogue start */
 386               		.stabn	68,0,79,.LM38-.LFBB3
 387               	.LM38:
 388 01a0 DF91      		pop r29
 389 01a2 CF91      		pop r28
 390 01a4 1F91      		pop r17
 391 01a6 0F91      		pop r16
 392 01a8 FF90      		pop r15
 393 01aa EF90      		pop r14
 394 01ac DF90      		pop r13
 395 01ae CF90      		pop r12
 396 01b0 BF90      		pop r11
 397 01b2 AF90      		pop r10
 398 01b4 0895      		ret
 399               		.size	mmc_readpartialblock, .-mmc_readpartialblock
 400               		.stabs	"al:r(4,4)",64,0,65,28
 401               		.stabs	"r1:r(4,2)",64,0,67,24
 402               		.stabn	192,0,0,.LFBB3-.LFBB3
 403               		.stabn	224,0,0,.Lscope3-.LFBB3
 404               	.Lscope3:
 405               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 406               		.stabd	78,0,0
 407               		.stabs	"mmc_readblock:F(0,2)",36,0,48,mmc_readblock
 408               		.stabs	"address:P(4,6)",64,0,48,14
 409               		.stabs	"sector:P(0,16)",64,0,48,12
 410               	.global	mmc_readblock
 411               		.type	mmc_readblock, @function
GAS LISTING /tmp/cczSPmsl.s 			page 10


 412               	mmc_readblock:
 413               		.stabd	46,0,0
 414               		.stabn	68,0,48,.LM39-.LFBB4
 415               	.LM39:
 416               	.LFBB4:
 417 01b6 CF92      		push r12
 418 01b8 DF92      		push r13
 419 01ba EF92      		push r14
 420 01bc FF92      		push r15
 421 01be 0F93      		push r16
 422 01c0 1F93      		push r17
 423 01c2 CF93      		push r28
 424 01c4 DF93      		push r29
 425               	/* prologue: function */
 426               	/* frame size = 0 */
 427 01c6 7B01      		movw r14,r22
 428 01c8 8C01      		movw r16,r24
 429 01ca 6A01      		movw r12,r20
 430               		.stabn	68,0,51,.LM40-.LFBB4
 431               	.LM40:
 432 01cc 9C01      		movw r18,r24
 433 01ce 4427      		clr r20
 434 01d0 5527      		clr r21
 435 01d2 81E5      		ldi r24,lo8(81)
 436 01d4 6FEF      		ldi r22,lo8(-1)
 437 01d6 A901      		movw r20,r18
 438 01d8 9701      		movw r18,r14
 439 01da 0E94 0000 		call mmc_command
 440 01de C0E0      		ldi r28,lo8(0)
 441 01e0 D0E0      		ldi r29,hi8(0)
 442               	.L28:
 443               		.stabn	68,0,53,.LM41-.LFBB4
 444               	.LM41:
 445 01e2 8823      		tst r24
 446 01e4 01F0      		breq .L32
 447               		.stabn	68,0,54,.LM42-.LFBB4
 448               	.LM42:
 449 01e6 8FEF      		ldi r24,lo8(-1)
 450 01e8 0E94 0000 		call spi_transfer
 451               		.stabn	68,0,52,.LM43-.LFBB4
 452               	.LM43:
 453 01ec 2196      		adiw r28,1
 454 01ee 93EC      		ldi r25,hi8(-15536)
 455 01f0 C035      		cpi r28,lo8(-15536)
 456 01f2 D907      		cpc r29,r25
 457 01f4 01F4      		brne .L28
 458               		.stabn	68,0,56,.LM44-.LFBB4
 459               	.LM44:
 460 01f6 8823      		tst r24
 461 01f8 01F0      		breq .L32
 462 01fa 81E0      		ldi r24,lo8(1)
 463 01fc 00C0      		rjmp .L29
 464               	.L32:
 465               		.stabn	68,0,57,.LM45-.LFBB4
 466               	.LM45:
 467 01fe 8FEF      		ldi r24,lo8(-1)
 468 0200 0E94 0000 		call spi_transfer
GAS LISTING /tmp/cczSPmsl.s 			page 11


 469 0204 8E3F      		cpi r24,lo8(-2)
 470 0206 01F4      		brne .L32
 471 0208 C0E0      		ldi r28,lo8(0)
 472 020a D0E0      		ldi r29,hi8(0)
 473               	.L30:
 474               		.stabn	68,0,58,.LM46-.LFBB4
 475               	.LM46:
 476 020c 8FEF      		ldi r24,lo8(-1)
 477 020e 0E94 0000 		call spi_transfer
 478 0212 F601      		movw r30,r12
 479 0214 EC0F      		add r30,r28
 480 0216 FD1F      		adc r31,r29
 481 0218 8083      		st Z,r24
 482 021a 2196      		adiw r28,1
 483 021c 82E0      		ldi r24,hi8(512)
 484 021e C030      		cpi r28,lo8(512)
 485 0220 D807      		cpc r29,r24
 486 0222 01F4      		brne .L30
 487               		.stabn	68,0,59,.LM47-.LFBB4
 488               	.LM47:
 489 0224 8FEF      		ldi r24,lo8(-1)
 490 0226 0E94 0000 		call spi_transfer
 491               		.stabn	68,0,60,.LM48-.LFBB4
 492               	.LM48:
 493 022a 8FEF      		ldi r24,lo8(-1)
 494 022c 0E94 0000 		call spi_transfer
 495 0230 80E0      		ldi r24,lo8(0)
 496               	.L29:
 497               	/* epilogue start */
 498               		.stabn	68,0,62,.LM49-.LFBB4
 499               	.LM49:
 500 0232 DF91      		pop r29
 501 0234 CF91      		pop r28
 502 0236 1F91      		pop r17
 503 0238 0F91      		pop r16
 504 023a FF90      		pop r15
 505 023c EF90      		pop r14
 506 023e DF90      		pop r13
 507 0240 CF90      		pop r12
 508 0242 0895      		ret
 509               		.size	mmc_readblock, .-mmc_readblock
 510               		.stabs	"r1:r(4,2)",64,0,51,24
 511               		.stabn	192,0,0,.LFBB4-.LFBB4
 512               		.stabn	224,0,0,.Lscope4-.LFBB4
 513               	.Lscope4:
 514               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 515               		.stabd	78,0,0
 516               		.stabs	"init_mmc:F(0,2)",36,0,26,init_mmc
 517               	.global	init_mmc
 518               		.type	init_mmc, @function
 519               	init_mmc:
 520               		.stabd	46,0,0
 521               		.stabn	68,0,26,.LM50-.LFBB5
 522               	.LM50:
 523               	.LFBB5:
 524 0244 1F93      		push r17
 525               	/* prologue: function */
GAS LISTING /tmp/cczSPmsl.s 			page 12


 526               	/* frame size = 0 */
 527               		.stabn	68,0,28,.LM51-.LFBB5
 528               	.LM51:
 529 0246 2C9A      		sbi 37-32,4
 530 0248 10E0      		ldi r17,lo8(0)
 531               	.L37:
 532               		.stabn	68,0,29,.LM52-.LFBB5
 533               	.LM52:
 534 024a 8FEF      		ldi r24,lo8(-1)
 535 024c 0E94 0000 		call spi_transfer
 536 0250 1F5F      		subi r17,lo8(-(1))
 537 0252 1A30      		cpi r17,lo8(10)
 538 0254 01F4      		brne .L37
 539               		.stabn	68,0,30,.LM53-.LFBB5
 540               	.LM53:
 541 0256 2C98      		cbi 37-32,4
 542               		.stabn	68,0,31,.LM54-.LFBB5
 543               	.LM54:
 544 0258 80E4      		ldi r24,lo8(64)
 545 025a 65E9      		ldi r22,lo8(-107)
 546 025c 40E0      		ldi r20,lo8(0)
 547 025e 50E0      		ldi r21,hi8(0)
 548 0260 20E0      		ldi r18,lo8(0)
 549 0262 30E0      		ldi r19,hi8(0)
 550 0264 0E94 0000 		call mmc_command
 551 0268 8130      		cpi r24,lo8(1)
 552 026a 01F0      		breq .L41
 553 026c 80E0      		ldi r24,lo8(0)
 554 026e 00C0      		rjmp .L39
 555               	.L41:
 556               		.stabn	68,0,32,.LM55-.LFBB5
 557               	.LM55:
 558 0270 81E4      		ldi r24,lo8(65)
 559 0272 6FEF      		ldi r22,lo8(-1)
 560 0274 40E0      		ldi r20,lo8(0)
 561 0276 50E0      		ldi r21,hi8(0)
 562 0278 20E0      		ldi r18,lo8(0)
 563 027a 30E0      		ldi r19,hi8(0)
 564 027c 0E94 0000 		call mmc_command
 565 0280 8823      		tst r24
 566 0282 01F4      		brne .L41
 567 0284 81E0      		ldi r24,lo8(1)
 568               	.L39:
 569               	/* epilogue start */
 570               		.stabn	68,0,34,.LM56-.LFBB5
 571               	.LM56:
 572 0286 1F91      		pop r17
 573 0288 0895      		ret
 574               		.size	init_mmc, .-init_mmc
 575               		.stabs	"i:r(0,2)",64,0,27,17
 576               		.stabn	192,0,0,.LFBB5-.LFBB5
 577               		.stabn	224,0,0,.Lscope5-.LFBB5
 578               	.Lscope5:
 579               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 580               		.stabd	78,0,0
 581               		.stabs	"",100,0,0,.Letext0
 582               	.Letext0:
GAS LISTING /tmp/cczSPmsl.s 			page 13


GAS LISTING /tmp/cczSPmsl.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mmc.c
     /tmp/cczSPmsl.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cczSPmsl.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cczSPmsl.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cczSPmsl.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cczSPmsl.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cczSPmsl.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cczSPmsl.s:76     .text:0000000000000000 mmc_command
     /tmp/cczSPmsl.s:150    .text:000000000000005c mmc_writeblock
     /tmp/cczSPmsl.s:283    .text:000000000000010a mmc_readpartialblock
     /tmp/cczSPmsl.s:412    .text:00000000000001b6 mmc_readblock
     /tmp/cczSPmsl.s:519    .text:0000000000000244 init_mmc

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
spi_transfer
