
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000220  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000036c  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000084  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000004c  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000026c  00000000  00000000  000006d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000010e  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a2  00000000  00000000  00000a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000b7  00000000  00000000  00000d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cc  00000000  00000000  00000e03  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d0 e1       	ldi	r29, 0x10	; 16
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e2       	ldi	r30, 0x20	; 32
  84:	f2 e0       	ldi	r31, 0x02	; 2
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 30       	cpi	r26, 0x00	; 0
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0c 94 a9 00 	jmp	0x152	; 0x152 <main>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <i2c_start>:
  i2c_start();i2c_tx(0xE0);i2c_tx(0x00);i2c_tx(0xAA);i2c_stop();
  i2c_start();i2c_tx(0xE0);i2c_tx(0x00);i2c_tx(0xE4);i2c_stop();
}

void i2c_start(void) {
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	84 b9       	out	0x04, r24	; 4
  DDRB=0xFF;
  PORTB=0;
  ae:	15 b8       	out	0x05, r1	; 5
  PORTB+=1;
  b0:	85 b1       	in	r24, 0x05	; 5
  b2:	8f 5f       	subi	r24, 0xFF	; 255
  b4:	85 b9       	out	0x05, r24	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  b6:	88 eb       	ldi	r24, 0xB8	; 184
  b8:	9b e0       	ldi	r25, 0x0B	; 11
  ba:	fc 01       	movw	r30, r24
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <i2c_start+0x12>
  _delay_loop_2(3000);
  PORTB+=2;
  c0:	25 b1       	in	r18, 0x05	; 5
  c2:	2e 5f       	subi	r18, 0xFE	; 254
  c4:	25 b9       	out	0x05, r18	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  c6:	fc 01       	movw	r30, r24
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <i2c_start+0x1e>
  _delay_loop_2(3000);
  PORTB-=1;
  cc:	25 b1       	in	r18, 0x05	; 5
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	25 b9       	out	0x05, r18	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d2:	fc 01       	movw	r30, r24
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <i2c_start+0x2a>
  _delay_loop_2(3000);
  PORTB-=2;
  d8:	25 b1       	in	r18, 0x05	; 5
  da:	22 50       	subi	r18, 0x02	; 2
  dc:	25 b9       	out	0x05, r18	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <i2c_start+0x34>
  e2:	08 95       	ret

000000e4 <i2c_stop>:
  _delay_loop_2(3000);
}

void i2c_stop(void) {
  e4:	8f ef       	ldi	r24, 0xFF	; 255
  e6:	84 b9       	out	0x04, r24	; 4
  DDRB=0xFF;
  PORTB=0;
  e8:	15 b8       	out	0x05, r1	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  ea:	88 eb       	ldi	r24, 0xB8	; 184
  ec:	9b e0       	ldi	r25, 0x0B	; 11
  ee:	fc 01       	movw	r30, r24
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <i2c_stop+0xc>
  _delay_loop_2(3000);
  PORTB+=2;
  f4:	25 b1       	in	r18, 0x05	; 5
  f6:	2e 5f       	subi	r18, 0xFE	; 254
  f8:	25 b9       	out	0x05, r18	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  fa:	fc 01       	movw	r30, r24
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <i2c_stop+0x18>
  _delay_loop_2(3000);
  PORTB+=1;
 100:	25 b1       	in	r18, 0x05	; 5
 102:	2f 5f       	subi	r18, 0xFF	; 255
 104:	25 b9       	out	0x05, r18	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <i2c_stop+0x22>
 10a:	08 95       	ret

0000010c <i2c_tx>:
  _delay_loop_2(3000);
}

unsigned char i2c_tx(unsigned char d) {
 10c:	98 2f       	mov	r25, r24
  DDRB=0xFF;
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	84 b9       	out	0x04, r24	; 4
 112:	28 e0       	ldi	r18, 0x08	; 8
 114:	31 e0       	ldi	r19, 0x01	; 1
  char x;
  unsigned char b;
  for(x=8;x;x--) {
    if(d&0x80) PORTB=1;
 116:	97 ff       	sbrs	r25, 7
 118:	02 c0       	rjmp	.+4      	; 0x11e <i2c_tx+0x12>
 11a:	35 b9       	out	0x05, r19	; 5
 11c:	01 c0       	rjmp	.+2      	; 0x120 <i2c_tx+0x14>
	else PORTB=0;
 11e:	15 b8       	out	0x05, r1	; 5
	PORTB+=2;
 120:	85 b1       	in	r24, 0x05	; 5
 122:	8e 5f       	subi	r24, 0xFE	; 254
 124:	85 b9       	out	0x05, r24	; 5
	d<<=1;
	PORTB-=2;
 126:	85 b1       	in	r24, 0x05	; 5
 128:	82 50       	subi	r24, 0x02	; 2
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	11 f0       	breq	.+4      	; 0x134 <i2c_tx+0x28>
 130:	99 0f       	add	r25, r25
 132:	f1 cf       	rjmp	.-30     	; 0x116 <i2c_tx+0xa>
  }
  PORTB=3;
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	85 b9       	out	0x05, r24	; 5
  DDRB=0xFE;
 138:	8e ef       	ldi	r24, 0xFE	; 254
 13a:	84 b9       	out	0x04, r24	; 4
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 13c:	88 eb       	ldi	r24, 0xB8	; 184
 13e:	9b e0       	ldi	r25, 0x0B	; 11
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <i2c_tx+0x34>
  _delay_loop_2(3000);
  b=(PINB&1);
 144:	83 b1       	in	r24, 0x03	; 3
  DDRB=0xFF;
 146:	9f ef       	ldi	r25, 0xFF	; 255
 148:	94 b9       	out	0x04, r25	; 4
  PORTB=0;
 14a:	15 b8       	out	0x05, r1	; 5
 14c:	81 70       	andi	r24, 0x01	; 1
  return b;
}
 14e:	99 27       	eor	r25, r25
 150:	08 95       	ret

00000152 <main>:
 152:	0e 94 55 00 	call	0xaa	; 0xaa <i2c_start>
 156:	80 ee       	ldi	r24, 0xE0	; 224
 158:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 162:	80 ea       	ldi	r24, 0xA0	; 160
 164:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 168:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_stop>
 16c:	0e 94 55 00 	call	0xaa	; 0xaa <i2c_start>
 170:	80 ee       	ldi	r24, 0xE0	; 224
 172:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 17c:	85 ea       	ldi	r24, 0xA5	; 165
 17e:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 182:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_stop>
 186:	0e 94 55 00 	call	0xaa	; 0xaa <i2c_start>
 18a:	80 ee       	ldi	r24, 0xE0	; 224
 18c:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 196:	8a ea       	ldi	r24, 0xAA	; 170
 198:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 19c:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_stop>
 1a0:	0e 94 55 00 	call	0xaa	; 0xaa <i2c_start>
 1a4:	80 ee       	ldi	r24, 0xE0	; 224
 1a6:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 1b0:	84 ee       	ldi	r24, 0xE4	; 228
 1b2:	0e 94 86 00 	call	0x10c	; 0x10c <i2c_tx>
 1b6:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_stop>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	08 95       	ret

000001c0 <i2c_rx>:

unsigned char i2c_rx(unsigned char ack) {
 1c0:	48 2f       	mov	r20, r24
  DDRB=0xFE;
 1c2:	8e ef       	ldi	r24, 0xFE	; 254
 1c4:	84 b9       	out	0x04, r24	; 4
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	e8 eb       	ldi	r30, 0xB8	; 184
 1cc:	fb e0       	ldi	r31, 0x0B	; 11
 1ce:	52 e0       	ldi	r21, 0x02	; 2
  char x,d=0;
  for(x=0;x<8;x++) {
    d<<=1;
 1d0:	33 0f       	add	r19, r19
	DDRB-=2;
 1d2:	84 b1       	in	r24, 0x04	; 4
 1d4:	82 50       	subi	r24, 0x02	; 2
 1d6:	84 b9       	out	0x04, r24	; 4
	while((PINB>>1)&1);
 1d8:	83 b1       	in	r24, 0x03	; 3
 1da:	86 95       	lsr	r24
 1dc:	80 fd       	sbrc	r24, 0
 1de:	fc cf       	rjmp	.-8      	; 0x1d8 <i2c_rx+0x18>
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1e0:	cf 01       	movw	r24, r30
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <i2c_rx+0x22>
	_delay_loop_2(3000);
	if(PINB&1) d|=1;
 1e6:	18 99       	sbic	0x03, 0	; 3
 1e8:	31 60       	ori	r19, 0x01	; 1
	DDRB+=2;
 1ea:	84 b1       	in	r24, 0x04	; 4
 1ec:	8e 5f       	subi	r24, 0xFE	; 254
 1ee:	84 b9       	out	0x04, r24	; 4
	PORTB=2;
 1f0:	55 b9       	out	0x05, r21	; 5
 1f2:	2f 5f       	subi	r18, 0xFF	; 255
 1f4:	28 30       	cpi	r18, 0x08	; 8
 1f6:	61 f7       	brne	.-40     	; 0x1d0 <i2c_rx+0x10>
  }
  DDRB=0xFF;
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	84 b9       	out	0x04, r24	; 4
  if(ack) PORTB=0;
 1fc:	44 23       	and	r20, r20
 1fe:	11 f0       	breq	.+4      	; 0x204 <i2c_rx+0x44>
 200:	15 b8       	out	0x05, r1	; 5
 202:	02 c0       	rjmp	.+4      	; 0x208 <i2c_rx+0x48>
  else PORTB=1;
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	85 b9       	out	0x05, r24	; 5
  PORTB+=2;
 208:	85 b1       	in	r24, 0x05	; 5
 20a:	8e 5f       	subi	r24, 0xFE	; 254
 20c:	85 b9       	out	0x05, r24	; 5
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 20e:	88 eb       	ldi	r24, 0xB8	; 184
 210:	9b e0       	ldi	r25, 0x0B	; 11
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <i2c_rx+0x52>
  _delay_loop_2(3000);
  PORTB=1;
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	85 b9       	out	0x05, r24	; 5
  return d;
} 21a:	83 2f       	mov	r24, r19
 21c:	99 27       	eor	r25, r25
 21e:	08 95       	ret
