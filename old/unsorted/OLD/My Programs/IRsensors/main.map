Archive member included because of file (symbol)

C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

prtc                0x1               main.o
prtd                0x1               main.o
loop_count          0x2               main.o
dird                0x1               main.o
dirb                0x1               main.o
prtb                0x1               main.o
dirc                0x1               main.o
convert             0x2               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
LOAD main.o
LOAD M8io.o
LOAD adc.o
LOAD timer1PWM.o
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4\libm.a
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4\libc.a
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4c0
 *(.vectors)
 .vectors       0x00000000       0x26 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x2 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
 *(.text)
 .text          0x0000005a        0x2 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
                0x0000005a                __vector_1
                0x0000005a                __vector_12
                0x0000005a                __bad_interrupt
                0x0000005a                __vector_6
                0x0000005a                __vector_3
                0x0000005a                __vector_11
                0x0000005a                __vector_13
                0x0000005a                __vector_17
                0x0000005a                __vector_7
                0x0000005a                __vector_5
                0x0000005a                __vector_4
                0x0000005a                __vector_9
                0x0000005a                __vector_2
                0x0000005a                __vector_15
                0x0000005a                __vector_8
                0x0000005a                __vector_14
                0x0000005a                __vector_10
                0x0000005a                __vector_16
                0x0000005a                __vector_18
 .text          0x0000005c       0x70 main.o
                0x0000005c                DELAY_MS
                0x00000076                main
 .text          0x000000cc      0x380 M8io.o
                0x0000016a                setIOC
                0x00000272                setStateB
                0x000002f6                setStateC
                0x000003fe                getStateB
                0x000000e6                setIOB
                0x0000037a                setStateD
                0x00000432                getStateD
                0x00000418                getStateC
                0x000001ee                setIOD
                0x000000cc                initIO
 .text          0x0000044c       0x5e adc.o
                0x00000488                ADC10bit
                0x00000470                ADC08bit
                0x0000044c                initADC
                0x00000456                DELAY_US
 .text          0x000004aa       0x16 timer1PWM.o
                0x000004b4                setCHA
                0x000004aa                initPWM
                0x000004ba                setCHB
                0x000004c0                . = ALIGN (0x2)
 *(.text.*)
                0x000004c0                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x000004c0                _etext = .

.data           0x00800060        0x0 load address 0x000004c0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0xa
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(COMMON)
 COMMON         0x00800060        0xa main.o
                                  0x0 (size before relaxing)
                0x00800060                prtc
                0x00800061                prtd
                0x00800062                loop_count
                0x00800064                dird
                0x00800065                dirb
                0x00800066                prtb
                0x00800067                dirc
                0x00800068                convert
                0x0080006a                PROVIDE (__bss_end, .)
                0x000004c0                __data_load_start = LOADADDR (.data)
                0x000004c0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006a        0x0
                0x0080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006a                PROVIDE (__noinit_end, .)
                0x0080006a                _end = .
                0x0080006a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x50
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x14 main.o
 .debug_aranges
                0x00000014       0x14 M8io.o
 .debug_aranges
                0x00000028       0x14 adc.o
 .debug_aranges
                0x0000003c       0x14 timer1PWM.o

.debug_pubnames
                0x00000000      0x1d5
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x79 main.o
 .debug_pubnames
                0x00000079       0xc8 M8io.o
 .debug_pubnames
                0x00000141       0x60 adc.o
 .debug_pubnames
                0x000001a1       0x34 timer1PWM.o

.debug_info     0x00000000      0x5df
 *(.debug_info)
 .debug_info    0x00000000      0x146 main.o
 .debug_info    0x00000146      0x29d M8io.o
 .debug_info    0x000003e3      0x12b adc.o
 .debug_info    0x0000050e       0xd1 timer1PWM.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x260
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x92 main.o
 .debug_abbrev  0x00000092       0xab M8io.o
 .debug_abbrev  0x0000013d       0x9c adc.o
 .debug_abbrev  0x000001d9       0x87 timer1PWM.o

.debug_line     0x00000000      0x4a4
 *(.debug_line)
 .debug_line    0x00000000      0x116 main.o
 .debug_line    0x00000116      0x1d1 M8io.o
 .debug_line    0x000002e7       0xff adc.o
 .debug_line    0x000003e6       0xbe timer1PWM.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000      0x1a0
 *(.debug_str)
 .debug_str     0x00000000       0xc3 main.o
                                 0xf7 (size before relaxing)
 .debug_str     0x000000c3       0x6f M8io.o
                                0x128 (size before relaxing)
 .debug_str     0x00000132       0x3e adc.o
                                 0xf5 (size before relaxing)
 .debug_str     0x00000170       0x30 timer1PWM.o
                                 0xcc (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)

Cross Reference Table

Symbol                                            File
ADC08bit                                          adc.o
                                                  main.o
ADC10bit                                          adc.o
DELAY_MS                                          main.o
DELAY_US                                          adc.o
                                                  main.o
__bad_interrupt                                   C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_clear_bss.o)
__bss_start                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_clear_bss.o)
__data_end                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
__data_load_start                                 C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
__data_start                                      C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
__do_clear_bss                                    C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_clear_bss.o)
                                                  timer1PWM.o
                                                  adc.o
                                                  M8io.o
                                                  main.o
__do_copy_data                                    C:/WinAVR/bin/../lib/gcc/avr/3.4.3/avr4\libgcc.a(_copy_data.o)
                                                  timer1PWM.o
                                                  adc.o
                                                  M8io.o
                                                  main.o
__heap_end                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__init                                            C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__stack                                           C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
                                                  main.o
__vector_1                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
__vectors                                         C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
convert                                           adc.o
                                                  main.o
dirb                                              M8io.o
                                                  main.o
dirc                                              M8io.o
                                                  main.o
dird                                              M8io.o
                                                  main.o
getStateB                                         M8io.o
getStateC                                         M8io.o
getStateD                                         M8io.o
initADC                                           adc.o
                                                  main.o
initIO                                            M8io.o
initPWM                                           timer1PWM.o
                                                  main.o
loop_count                                        adc.o
                                                  main.o
main                                              main.o
                                                  C:/WinAVR/bin/../lib/gcc/avr/3.4.3/../../../../avr/lib/avr4/crtm8.o
prtb                                              M8io.o
                                                  main.o
prtc                                              M8io.o
                                                  main.o
prtd                                              M8io.o
                                                  main.o
setCHA                                            timer1PWM.o
                                                  main.o
setCHB                                            timer1PWM.o
                                                  main.o
setIOB                                            M8io.o
setIOC                                            M8io.o
setIOD                                            M8io.o
                                                  main.o
setStateB                                         M8io.o
setStateC                                         M8io.o
setStateD                                         M8io.o
                                                  main.o
