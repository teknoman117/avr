GAS LISTING /tmp/ccvwx7q3.s 			page 1


   1               		.file	"main.cpp"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
   9               		.stabs	"/home/nathaniel/programming/AVR_code/projects/pwm/",100,0,4,.Ltext0
  10               		.stabs	"main.cpp",100,0,4,.Ltext0
  11               		.text
  12               	.Ltext0:
  13               		.stabs	"gcc2_compiled.",60,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,1)=*(0,2)=(0,2)",128,0,0,0
  15               		.stabs	"complex long double:t(0,3)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,4)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,5)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,6)=s4real:(0,7)=r(0,7);-32768;32767;,0,16;imag:(0,7),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,8)=@s64;r(0,8);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,9)=@s32;r(0,9);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,10)=r(0,10);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,12)=@s64;r(0,12);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,13)=@s32;r(0,13);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,7)",128,0,0,0
  26               		.stabs	"signed char:t(0,14)=@s8;r(0,14);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,15)=@s8;r(0,15);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,7)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,9)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,8)",128,0,0,0
  31               		.stabs	"short int:t(0,16)=r(0,16);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,17)=r(0,17);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,17)",128,0,0,0
  34               		.stabs	"float:t(0,18)=r(0,7);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,19)=r(0,7);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,20)=r(0,7);4;0;",128,0,0,0
  37               		.stabs	"void:t(0,2)",128,0,0,0
  38               		.stabs	"wchar_t:t(0,21)=r(0,21);-32768;32767;",128,0,0,0
  39               		.stabs	"bool:t(0,22)=@s8;-16;",128,0,0,0
  40               		.stabs	"__vtbl_ptr_type:t(0,23)=*(0,24)=f(0,7)",128,0,0,0
  41               		.stabs	"int8_t:t(0,25)=(0,14)",128,0,121,0
  42               		.stabs	"uint8_t:t(0,26)=(0,11)",128,0,122,0
  43               		.stabs	"int16_t:t(0,27)=(0,7)",128,0,123,0
  44               		.stabs	"uint16_t:t(0,28)=(0,10)",128,0,124,0
  45               		.stabs	"int32_t:t(0,29)=(0,13)",128,0,125,0
  46               		.stabs	"uint32_t:t(0,30)=(0,9)",128,0,126,0
  47               		.stabs	"int64_t:t(0,31)=(0,12)",128,0,128,0
  48               		.stabs	"uint64_t:t(0,32)=(0,8)",128,0,129,0
  49               		.stabs	"intptr_t:t(0,33)=(0,27)",128,0,142,0
  50               		.stabs	"uintptr_t:t(0,34)=(0,28)",128,0,147,0
  51               		.stabs	"int_least8_t:t(0,35)=(0,25)",128,0,159,0
  52               		.stabs	"uint_least8_t:t(0,36)=(0,26)",128,0,164,0
  53               		.stabs	"int_least16_t:t(0,37)=(0,27)",128,0,169,0
  54               		.stabs	"uint_least16_t:t(0,38)=(0,28)",128,0,174,0
  55               		.stabs	"int_least32_t:t(0,39)=(0,29)",128,0,179,0
  56               		.stabs	"uint_least32_t:t(0,40)=(0,30)",128,0,184,0
  57               		.stabs	"int_least64_t:t(0,41)=(0,31)",128,0,192,0
GAS LISTING /tmp/ccvwx7q3.s 			page 2


  58               		.stabs	"uint_least64_t:t(0,42)=(0,32)",128,0,199,0
  59               		.stabs	"int_fast8_t:t(0,43)=(0,25)",128,0,213,0
  60               		.stabs	"uint_fast8_t:t(0,44)=(0,26)",128,0,218,0
  61               		.stabs	"int_fast16_t:t(0,45)=(0,27)",128,0,223,0
  62               		.stabs	"uint_fast16_t:t(0,46)=(0,28)",128,0,228,0
  63               		.stabs	"int_fast32_t:t(0,47)=(0,29)",128,0,233,0
  64               		.stabs	"uint_fast32_t:t(0,48)=(0,30)",128,0,238,0
  65               		.stabs	"int_fast64_t:t(0,49)=(0,31)",128,0,246,0
  66               		.stabs	"uint_fast64_t:t(0,50)=(0,32)",128,0,253,0
  67               		.stabs	"intmax_t:t(0,51)=(0,31)",128,0,273,0
  68               		.stabs	"uintmax_t:t(0,52)=(0,32)",128,0,278,0
  69               		.stabs	"int_farptr_t:t(0,53)=(0,29)",128,0,77,0
  70               		.stabs	"uint_farptr_t:t(0,54)=(0,30)",128,0,81,0
  71               		.stabs	"PWM:Tt(0,55)=s2timer:/0(0,26),0,8;channel:/0(0,26),8,8;initT0::(0,56)=#(0,55),(0,2),(0,57)
  72               		.stabs	"_ZN3PWMC2Ev:F(0,2)",36,0,20,_ZN3PWMC2Ev
  73               		.stabs	"this:P(0,59)=k(0,57)",64,0,20,24
  74               	.global	_ZN3PWMC2Ev
  75               		.type	_ZN3PWMC2Ev, @function
  76               	_ZN3PWMC2Ev:
  77               		.stabd	46,0,0
  78               		.stabs	"PWM.h",132,0,0,.Ltext1
  79               	.Ltext1:
   1:PWM.h         **** //this is optimized for the ATmega644
   2:PWM.h         **** //timer 0 and 2 only support 8 bit PWM
   3:PWM.h         **** //channel A is represented by 1 and channel B is represented by 2
   4:PWM.h         **** #include <avr/io.h>
   5:PWM.h         **** #include <stdint.h>
   6:PWM.h         **** 
   7:PWM.h         **** class PWM {
   8:PWM.h         **** 	uint8_t timer;
   9:PWM.h         **** 	uint8_t channel;
  10:PWM.h         **** 	void initT0();
  11:PWM.h         **** 	void initT1();
  12:PWM.h         **** 	void initT2();
  13:PWM.h         **** public:
  14:PWM.h         ****     PWM();
  15:PWM.h         ****     PWM(uint8_t n);
  16:PWM.h         ****     void setTC(uint8_t n);
  17:PWM.h         ****     void setvalue(uint8_t value);
  18:PWM.h         **** };
  19:PWM.h         **** 
  20:PWM.h         **** PWM::PWM() {}
  80               		.stabn	68,0,20,.LM0-.LFBB1
  81               	.LM0:
  82               	.LFBB1:
  83               	/* prologue: frame size=0 */
  84               	/* prologue end (size=0) */
  85               	/* epilogue: frame size=0 */
  86 0000 0895      		ret
  87               	/* epilogue end (size=1) */
  88               	/* function PWM::PWM() size 1 (0) */
  89               		.size	_ZN3PWMC2Ev, .-_ZN3PWMC2Ev
  90               	.Lscope1:
  91               		.stabs	"",36,0,0,.Lscope1-.LFBB1
  92               		.stabd	78,0,0
  93               		.stabs	"_ZN3PWMC1Ev:F(0,2)",36,0,20,_ZN3PWMC1Ev
  94               		.stabs	"this:P(0,59)",64,0,20,24
GAS LISTING /tmp/ccvwx7q3.s 			page 3


  95               	.global	_ZN3PWMC1Ev
  96               		.type	_ZN3PWMC1Ev, @function
  97               	_ZN3PWMC1Ev:
  98               		.stabd	46,0,0
  99               		.stabn	68,0,20,.LM1-.LFBB2
 100               	.LM1:
 101               	.LFBB2:
 102               	/* prologue: frame size=0 */
 103               	/* prologue end (size=0) */
 104               	/* epilogue: frame size=0 */
 105 0002 0895      		ret
 106               	/* epilogue end (size=1) */
 107               	/* function PWM::PWM() size 1 (0) */
 108               		.size	_ZN3PWMC1Ev, .-_ZN3PWMC1Ev
 109               	.Lscope2:
 110               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 111               		.stabd	78,0,0
 112               		.stabs	"_ZN3PWMC1Eh:F(0,2)",36,0,21,_ZN3PWMC1Eh
 113               		.stabs	"this:P(0,59)",64,0,21,30
 114               		.stabs	"n:P(0,26)",64,0,21,22
 115               	.global	_ZN3PWMC1Eh
 116               		.type	_ZN3PWMC1Eh, @function
 117               	_ZN3PWMC1Eh:
 118               		.stabd	46,0,0
  21:PWM.h         **** PWM::PWM(uint8_t n) {
 119               		.stabn	68,0,21,.LM2-.LFBB3
 120               	.LM2:
 121               	.LFBB3:
 122               	/* prologue: frame size=0 */
 123               	/* prologue end (size=0) */
 124 0004 FC01      		movw r30,r24
 125               	.LBB14:
  22:PWM.h         ****     if((n == 0) || (n == 1)) {timer = 0;}
 126               		.stabn	68,0,22,.LM3-.LFBB3
 127               	.LM3:
 128 0006 6230      		cpi r22,lo8(2)
 129 0008 00F4      		brsh .L6
 130               		.stabn	68,0,22,.LM4-.LFBB3
 131               	.LM4:
 132 000a 1082      		st Z,__zero_reg__
 133               	.L6:
  23:PWM.h         ****     if((n == 2) || (n == 3)) {timer = 1;}
 134               		.stabn	68,0,23,.LM5-.LFBB3
 135               	.LM5:
 136 000c 862F      		mov r24,r22
 137 000e 8250      		subi r24,lo8(-(-2))
 138 0010 8230      		cpi r24,lo8(2)
 139 0012 00F4      		brsh .L8
 140 0014 81E0      		ldi r24,lo8(1)
 141 0016 8083      		st Z,r24
 142               	.L8:
  24:PWM.h         ****     if((n == 4) || (n == 5)) {timer = 2;}
 143               		.stabn	68,0,24,.LM6-.LFBB3
 144               	.LM6:
 145 0018 862F      		mov r24,r22
 146 001a 8450      		subi r24,lo8(-(-4))
 147 001c 8230      		cpi r24,lo8(2)
GAS LISTING /tmp/ccvwx7q3.s 			page 4


 148 001e 00F4      		brsh .L10
 149 0020 82E0      		ldi r24,lo8(2)
 150 0022 8083      		st Z,r24
 151               	.L10:
  25:PWM.h         ****     if((n == 0) || (n == 2) || (n == 4)) {channel= 1;}
 152               		.stabn	68,0,25,.LM7-.LFBB3
 153               	.LM7:
 154 0024 6623      		tst r22
 155 0026 01F0      		breq .L12
 156 0028 6230      		cpi r22,lo8(2)
 157 002a 01F0      		breq .L12
 158 002c 6430      		cpi r22,lo8(4)
 159 002e 01F4      		brne .L15
 160               	.L12:
 161 0030 81E0      		ldi r24,lo8(1)
 162 0032 00C0      		rjmp .L22
 163               	.L15:
  26:PWM.h         ****     else {channel = 2;}
 164               		.stabn	68,0,26,.LM8-.LFBB3
 165               	.LM8:
 166 0034 82E0      		ldi r24,lo8(2)
 167               	.L22:
 168 0036 8183      		std Z+1,r24
  27:PWM.h         **** 	switch (timer) {
 169               		.stabn	68,0,27,.LM9-.LFBB3
 170               	.LM9:
 171 0038 8081      		ld r24,Z
 172 003a 8130      		cpi r24,lo8(1)
 173 003c 01F0      		breq .L19
 174 003e 8130      		cpi r24,lo8(1)
 175 0040 00F0      		brlo .L18
 176 0042 8230      		cpi r24,lo8(2)
 177 0044 01F4      		brne .L21
 178 0046 00C0      		rjmp .L20
 179               	.L18:
 180               	.LBB15:
 181               	.LBB16:
  28:PWM.h         **** 		case 0: initT0(); break;
  29:PWM.h         **** 		case 1: initT1(); break;
  30:PWM.h         **** 		case 2: initT2(); break;
  31:PWM.h         **** 	}
  32:PWM.h         **** }	
  33:PWM.h         **** void PWM::setTC(uint8_t n) {
  34:PWM.h         ****     if((n == 0) || (n == 1)) {timer = 0;}
  35:PWM.h         ****     if((n == 2) || (n == 3)) {timer = 1;}
  36:PWM.h         ****     if((n == 4) || (n == 5)) {timer = 2;}
  37:PWM.h         ****     if((n == 0) || (n == 2) || (n == 4)) {channel= 1;}
  38:PWM.h         ****     else {channel = 2;}
  39:PWM.h         ****     switch (timer) {
  40:PWM.h         **** 		case 0: initT0(); break;
  41:PWM.h         **** 		case 1: initT1(); break;
  42:PWM.h         **** 		case 2: initT2(); break;
  43:PWM.h         **** 	}
  44:PWM.h         **** }
  45:PWM.h         **** 
  46:PWM.h         **** void PWM::setvalue (uint8_t value) {
  47:PWM.h         **** 	switch (timer) {
GAS LISTING /tmp/ccvwx7q3.s 			page 5


  48:PWM.h         **** 		case 0: 
  49:PWM.h         **** 		  if(channel == 1) {OCR0A = value;}
  50:PWM.h         **** 		  if(channel == 2) {OCR0B = value;}
  51:PWM.h         **** 	      break;
  52:PWM.h         **** 	    case 1:
  53:PWM.h         **** 	      if(channel == 1) {OCR1A = value;}
  54:PWM.h         **** 	      if(channel == 2) {OCR1B = value;} 
  55:PWM.h         **** 	      break;
  56:PWM.h         **** 	    case 2:
  57:PWM.h         **** 		  if(channel == 1) {OCR2A = value;}
  58:PWM.h         **** 		  if(channel == 2) {OCR2B = value;}
  59:PWM.h         **** 	      break;
  60:PWM.h         **** 	}
  61:PWM.h         **** }
  62:PWM.h         **** 
  63:PWM.h         **** void PWM::initT0 () {
  64:PWM.h         ****     TCCR0A = (1<<WGM00) | (1<<COM0A1) | (1<<COM0B1) | (1<<WGM01);
 182               		.stabn	68,0,64,.LM10-.LFBB3
 183               	.LM10:
 184 0048 83EA      		ldi r24,lo8(-93)
 185 004a 84BD      		out 68-0x20,r24
  65:PWM.h         ****     TCCR0B = (1<<CS00);
 186               		.stabn	68,0,65,.LM11-.LFBB3
 187               	.LM11:
 188 004c 81E0      		ldi r24,lo8(1)
 189 004e 85BD      		out 69-0x20,r24
 190 0050 0895      		ret
 191               	.L19:
 192               	.LBE16:
 193               	.LBE15:
 194               	.LBB17:
 195               	.LBB18:
  66:PWM.h         **** }
  67:PWM.h         **** 
  68:PWM.h         **** void PWM::initT1 () {
  69:PWM.h         ****     TCCR1A = (1<<WGM10) | (1<<COM1A1) | (1<<COM1B1); 
 196               		.stabn	68,0,69,.LM12-.LFBB3
 197               	.LM12:
 198 0052 81EA      		ldi r24,lo8(-95)
 199 0054 8093 8000 		sts 128,r24
  70:PWM.h         ****     TCCR1B = (1<<CS10) | (1<<WGM12);		
 200               		.stabn	68,0,70,.LM13-.LFBB3
 201               	.LM13:
 202 0058 89E0      		ldi r24,lo8(9)
 203 005a 8093 8100 		sts 129,r24
 204 005e 0895      		ret
 205               	.L20:
 206               	.LBE18:
 207               	.LBE17:
 208               	.LBB19:
 209               	.LBB20:
  71:PWM.h         **** }
  72:PWM.h         **** 
  73:PWM.h         **** void PWM::initT2 () {
  74:PWM.h         ****     TCCR0A = (1<<WGM20) | (1<<COM2A1) | (1<<COM2B1) | (1<<WGM21);
 210               		.stabn	68,0,74,.LM14-.LFBB3
 211               	.LM14:
GAS LISTING /tmp/ccvwx7q3.s 			page 6


 212 0060 83EA      		ldi r24,lo8(-93)
 213 0062 84BD      		out 68-0x20,r24
  75:PWM.h         ****     TCCR0B = (1<<CS20);
 214               		.stabn	68,0,75,.LM15-.LFBB3
 215               	.LM15:
 216 0064 81E0      		ldi r24,lo8(1)
 217 0066 85BD      		out 69-0x20,r24
 218               	.L21:
 219 0068 0895      		ret
 220               	.LBE20:
 221               	.LBE19:
 222               	.LBE14:
 223               	/* epilogue: frame size=0 */
 224               	/* epilogue: noreturn */
 225               	/* epilogue end (size=0) */
 226               	/* function PWM::PWM(uint8_t) size 51 (51) */
 227               		.size	_ZN3PWMC1Eh, .-_ZN3PWMC1Eh
 228               	.Lscope3:
 229               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 230               		.stabd	78,0,0
 231               		.stabs	"_ZN3PWM8setvalueEh:F(0,2)",36,0,46,_ZN3PWM8setvalueEh
 232               		.stabs	"this:P(0,59)",64,0,46,30
 233               		.stabs	"value:P(0,26)",64,0,46,22
 234               	.global	_ZN3PWM8setvalueEh
 235               		.type	_ZN3PWM8setvalueEh, @function
 236               	_ZN3PWM8setvalueEh:
 237               		.stabd	46,0,0
 238               		.stabn	68,0,46,.LM16-.LFBB4
 239               	.LM16:
 240               	.LFBB4:
 241               	/* prologue: frame size=0 */
 242               	/* prologue end (size=0) */
 243 006a FC01      		movw r30,r24
 244               		.stabn	68,0,47,.LM17-.LFBB4
 245               	.LM17:
 246 006c 2081      		ld r18,Z
 247 006e 2130      		cpi r18,lo8(1)
 248 0070 01F0      		breq .L26
 249               		.stabn	68,0,47,.LM18-.LFBB4
 250               	.LM18:
 251 0072 2130      		cpi r18,lo8(1)
 252 0074 00F0      		brlo .L25
 253 0076 2230      		cpi r18,lo8(2)
 254 0078 01F4      		brne .L37
 255 007a 00C0      		rjmp .L27
 256               	.L25:
 257               		.stabn	68,0,49,.LM19-.LFBB4
 258               	.LM19:
 259 007c 8181      		ldd r24,Z+1
 260 007e 8130      		cpi r24,lo8(1)
 261 0080 01F4      		brne .L28
 262 0082 67BD      		out 71-0x20,r22
 263 0084 0895      		ret
 264               	.L28:
 265               		.stabn	68,0,50,.LM20-.LFBB4
 266               	.LM20:
 267 0086 8230      		cpi r24,lo8(2)
GAS LISTING /tmp/ccvwx7q3.s 			page 7


 268 0088 01F4      		brne .L37
 269 008a 68BD      		out 72-0x20,r22
 270 008c 0895      		ret
 271               	.L26:
 272               		.stabn	68,0,53,.LM21-.LFBB4
 273               	.LM21:
 274 008e 8181      		ldd r24,Z+1
 275 0090 8130      		cpi r24,lo8(1)
 276 0092 01F4      		brne .L31
 277 0094 862F      		mov r24,r22
 278 0096 9927      		clr r25
 279 0098 9093 8900 		sts (136)+1,r25
 280 009c 8093 8800 		sts 136,r24
 281 00a0 0895      		ret
 282               	.L31:
 283               		.stabn	68,0,54,.LM22-.LFBB4
 284               	.LM22:
 285 00a2 8230      		cpi r24,lo8(2)
 286 00a4 01F4      		brne .L37
 287 00a6 862F      		mov r24,r22
 288 00a8 9927      		clr r25
 289 00aa 9093 8B00 		sts (138)+1,r25
 290 00ae 8093 8A00 		sts 138,r24
 291 00b2 0895      		ret
 292               	.L27:
 293               		.stabn	68,0,57,.LM23-.LFBB4
 294               	.LM23:
 295 00b4 8181      		ldd r24,Z+1
 296 00b6 8130      		cpi r24,lo8(1)
 297 00b8 01F4      		brne .L34
 298 00ba 6093 B300 		sts 179,r22
 299 00be 0895      		ret
 300               	.L34:
 301               		.stabn	68,0,58,.LM24-.LFBB4
 302               	.LM24:
 303 00c0 8230      		cpi r24,lo8(2)
 304 00c2 01F4      		brne .L37
 305 00c4 6093 B400 		sts 180,r22
 306               	.L37:
 307 00c8 0895      		ret
 308               	/* epilogue: frame size=0 */
 309               	/* epilogue: noreturn */
 310               	/* epilogue end (size=0) */
 311               	/* function void PWM::setvalue(uint8_t) size 48 (48) */
 312               		.size	_ZN3PWM8setvalueEh, .-_ZN3PWM8setvalueEh
 313               	.Lscope4:
 314               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 315               		.stabd	78,0,0
 316               		.stabs	"_ZN3PWM6initT0Ev:F(0,2)",36,0,63,_ZN3PWM6initT0Ev
 317               		.stabs	"this:P(0,59)",64,0,63,24
 318               	.global	_ZN3PWM6initT0Ev
 319               		.type	_ZN3PWM6initT0Ev, @function
 320               	_ZN3PWM6initT0Ev:
 321               		.stabd	46,0,0
 322               		.stabn	68,0,63,.LM25-.LFBB5
 323               	.LM25:
 324               	.LFBB5:
GAS LISTING /tmp/ccvwx7q3.s 			page 8


 325               	/* prologue: frame size=0 */
 326               	/* prologue end (size=0) */
 327               		.stabn	68,0,64,.LM26-.LFBB5
 328               	.LM26:
 329 00ca 83EA      		ldi r24,lo8(-93)
 330 00cc 84BD      		out 68-0x20,r24
 331               		.stabn	68,0,65,.LM27-.LFBB5
 332               	.LM27:
 333 00ce 81E0      		ldi r24,lo8(1)
 334 00d0 85BD      		out 69-0x20,r24
 335               	/* epilogue: frame size=0 */
 336 00d2 0895      		ret
 337               	/* epilogue end (size=1) */
 338               	/* function void PWM::initT0() size 5 (4) */
 339               		.size	_ZN3PWM6initT0Ev, .-_ZN3PWM6initT0Ev
 340               	.Lscope5:
 341               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 342               		.stabd	78,0,0
 343               		.stabs	"_ZN3PWM6initT1Ev:F(0,2)",36,0,68,_ZN3PWM6initT1Ev
 344               		.stabs	"this:P(0,59)",64,0,68,24
 345               	.global	_ZN3PWM6initT1Ev
 346               		.type	_ZN3PWM6initT1Ev, @function
 347               	_ZN3PWM6initT1Ev:
 348               		.stabd	46,0,0
 349               		.stabn	68,0,68,.LM28-.LFBB6
 350               	.LM28:
 351               	.LFBB6:
 352               	/* prologue: frame size=0 */
 353               	/* prologue end (size=0) */
 354               		.stabn	68,0,69,.LM29-.LFBB6
 355               	.LM29:
 356 00d4 81EA      		ldi r24,lo8(-95)
 357 00d6 8093 8000 		sts 128,r24
 358               		.stabn	68,0,70,.LM30-.LFBB6
 359               	.LM30:
 360 00da 89E0      		ldi r24,lo8(9)
 361 00dc 8093 8100 		sts 129,r24
 362               	/* epilogue: frame size=0 */
 363 00e0 0895      		ret
 364               	/* epilogue end (size=1) */
 365               	/* function void PWM::initT1() size 7 (6) */
 366               		.size	_ZN3PWM6initT1Ev, .-_ZN3PWM6initT1Ev
 367               	.Lscope6:
 368               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 369               		.stabd	78,0,0
 370               		.stabs	"_ZN3PWM6initT2Ev:F(0,2)",36,0,73,_ZN3PWM6initT2Ev
 371               		.stabs	"this:P(0,59)",64,0,73,24
 372               	.global	_ZN3PWM6initT2Ev
 373               		.type	_ZN3PWM6initT2Ev, @function
 374               	_ZN3PWM6initT2Ev:
 375               		.stabd	46,0,0
 376               		.stabn	68,0,73,.LM31-.LFBB7
 377               	.LM31:
 378               	.LFBB7:
 379               	/* prologue: frame size=0 */
 380               	/* prologue end (size=0) */
 381               		.stabn	68,0,74,.LM32-.LFBB7
GAS LISTING /tmp/ccvwx7q3.s 			page 9


 382               	.LM32:
 383 00e2 83EA      		ldi r24,lo8(-93)
 384 00e4 84BD      		out 68-0x20,r24
 385               		.stabn	68,0,75,.LM33-.LFBB7
 386               	.LM33:
 387 00e6 81E0      		ldi r24,lo8(1)
 388 00e8 85BD      		out 69-0x20,r24
 389               	/* epilogue: frame size=0 */
 390 00ea 0895      		ret
 391               	/* epilogue end (size=1) */
 392               	/* function void PWM::initT2() size 5 (4) */
 393               		.size	_ZN3PWM6initT2Ev, .-_ZN3PWM6initT2Ev
 394               	.Lscope7:
 395               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 396               		.stabd	78,0,0
 397               		.stabs	"main:F(0,7)",36,0,6,main
 398               	.global	main
 399               		.type	main, @function
 400               	main:
 401               		.stabd	46,0,0
 402               		.stabs	"main.cpp",132,0,0,.Ltext2
 403               	.Ltext2:
   1:main.cpp      **** #define F_CPU 11059200UL
   2:main.cpp      **** #include <util/delay.h>
   3:main.cpp      **** #include <avr/io.h>
   4:main.cpp      **** #include "PWM.h"
   5:main.cpp      **** 
   6:main.cpp      **** int main () {
 404               		.stabn	68,0,6,.LM34-.LFBB8
 405               	.LM34:
 406               	.LFBB8:
 407               	/* prologue: frame size=2 */
 408 00ec C0E0      		ldi r28,lo8(__stack - 2)
 409 00ee D0E0      		ldi r29,hi8(__stack - 2)
 410 00f0 DEBF      		out __SP_H__,r29
 411 00f2 CDBF      		out __SP_L__,r28
 412               	/* prologue end (size=4) */
 413               	.LBB43:
   7:main.cpp      **** 	DDRD = 0xFF;
 414               		.stabn	68,0,7,.LM35-.LFBB8
 415               	.LM35:
 416 00f4 8FEF      		ldi r24,lo8(-1)
 417 00f6 8AB9      		out 42-0x20,r24
   8:main.cpp      **** 	DDRC = 0xFF;
 418               		.stabn	68,0,8,.LM36-.LFBB8
 419               	.LM36:
 420 00f8 87B9      		out 39-0x20,r24
   9:main.cpp      **** 	PORTC = 0;
 421               		.stabn	68,0,9,.LM37-.LFBB8
 422               	.LM37:
 423 00fa 18B8      		out 40-0x20,__zero_reg__
  10:main.cpp      **** 	//if((PORTC >> 0) & 1) {PORTC -= (1 << 0);}
  11:main.cpp      **** 	PORTD = 128;
 424               		.stabn	68,0,11,.LM38-.LFBB8
 425               	.LM38:
 426 00fc 80E8      		ldi r24,lo8(-128)
 427 00fe 8BB9      		out 43-0x20,r24
GAS LISTING /tmp/ccvwx7q3.s 			page 10


 428 0100 20E1      		ldi r18,lo8(10000)
 429 0102 37E2      		ldi r19,hi8(10000)
 430               	.L45:
 431               	.LBB44:
 432               	.LBB45:
 433               	.LBB46:
 434               	.LBB47:
 435               	.LBB48:
 436               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 437               	.Ltext3:
   1:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
   5:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
   8:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  11:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  16:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  20:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  32:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  34:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  37:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  39:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \file */
  40:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     \code
  42:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     \endcode
  44:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  45:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
GAS LISTING /tmp/ccvwx7q3.s 			page 11


  48:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  53:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  60:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  62:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** */
  63:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  64:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #endif
  68:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  69:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  71:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  77:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** */
  80:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** void
  81:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** {
  83:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** }
  90:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  91:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  93:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  99:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****  */
 102:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** void
 103:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** {
GAS LISTING /tmp/ccvwx7q3.s 			page 12


 105:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 106:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"1: sbiw %0,1" "\n\t"
 107:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
 108:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "=w" (__count)
 109:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
 110:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	);
 438               		.stabn	68,0,110,.LM39-.LFBB8
 439               	.LM39:
 440 0104 84E1      		ldi r24,lo8(276)
 441 0106 91E0      		ldi r25,hi8(276)
 442               	/* #APP */
 443 0108 0197      		1: sbiw r24,1
 444 010a 01F4      		brne 1b
 445               	/* #NOAPP */
 446               	.LBE48:
 447               	.LBE47:
 448               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h",132,0,0,.Ltext4
 449               	.Ltext4:
   1:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
   6:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
   9:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  12:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  17:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  21:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  33:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  35:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  38:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
GAS LISTING /tmp/ccvwx7q3.s 			page 13


  40:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  41:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /** \file */
  42:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \code
  44:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \endcode
  48:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  49:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     used.
  53:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  54:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  63:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  72:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  76:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** */
  77:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  78:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  82:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  83:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  88:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  89:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  92:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  93:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /**
  94:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  96:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
GAS LISTING /tmp/ccvwx7q3.s 			page 14


  97:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  98:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 101:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 103:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    will not be informed about this case.
 106:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****  */
 107:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** void
 108:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** _delay_us(double __us)
 109:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** {
 110:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 114:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	{
 116:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		return;
 118:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	}
 119:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else
 120:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** }
 123:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 124:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 125:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /**
 126:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 127:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 128:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 130:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 133:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 135:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****  */
 141:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** void
 142:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** {
 144:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 146:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 147:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 148:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 149:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	{
 150:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 152:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		while(__ticks)
 153:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		{
GAS LISTING /tmp/ccvwx7q3.s 			page 15


 154:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			__ticks --;
 450               		.stabn	68,0,156,.LM40-.LFBB8
 451               	.LM40:
 452 010c 2150      		subi r18,lo8(-(-1))
 453 010e 3040      		sbci r19,hi8(-(-1))
 454               		.stabn	68,0,152,.LM41-.LFBB8
 455               	.LM41:
 456 0110 01F4      		brne .L45
 457               	.LBE46:
 458               	.LBE45:
 459               	.LBE44:
 460               		.stabs	"main.cpp",132,0,0,.Ltext5
 461               	.Ltext5:
  12:main.cpp      **** 	_delay_ms(1000);
  13:main.cpp      **** 	PORTD = 0;
 462               		.stabn	68,0,13,.LM42-.LFBB8
 463               	.LM42:
 464 0112 1BB8      		out 43-0x20,__zero_reg__
  14:main.cpp      **** 	PWM led(0);
 465               		.stabn	68,0,14,.LM43-.LFBB8
 466               	.LM43:
 467 0114 60E0      		ldi r22,lo8(0)
 468 0116 8E01      		movw r16,r28
 469 0118 0F5F      		subi r16,lo8(-(1))
 470 011a 1F4F      		sbci r17,hi8(-(1))
 471 011c C801      		movw r24,r16
 472 011e 0E94 0000 		call _ZN3PWMC1Eh
 473 0122 00C0      		rjmp .L59
 474               	.L48:
  15:main.cpp      **** 	int c;
  16:main.cpp      **** 	while (1) {
  17:main.cpp      ****         /*led.setvalue(255);
  18:main.cpp      ****         _delay_ms(1000);
  19:main.cpp      ****         led.setvalue(0);
  20:main.cpp      ****         _delay_ms(1000);
  21:main.cpp      ****         led.setvalue(128);
  22:main.cpp      ****         _delay_ms(1000);
  23:main.cpp      ****         led.setvalue(0);
  24:main.cpp      ****         _delay_ms(1000);*/	
  25:main.cpp      ****         c = 0;
  26:main.cpp      ****         while (c < 255) {
  27:main.cpp      ****         	led.setvalue(c);
 475               		.stabn	68,0,27,.LM44-.LFBB8
 476               	.LM44:
 477 0124 6E2D      		mov r22,r14
 478 0126 C801      		movw r24,r16
 479 0128 0E94 0000 		call _ZN3PWM8setvalueEh
 480               	.LBB49:
 481               	.LBB50:
 482               	.LBB51:
 483               	.LBB52:
 484               	.LBB53:
 485               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext6
 486               	.Ltext6:
 487               		.stabn	68,0,110,.LM45-.LFBB8
GAS LISTING /tmp/ccvwx7q3.s 			page 16


 488               	.LM45:
 489 012c 83E3      		ldi r24,lo8(11059)
 490 012e 9BE2      		ldi r25,hi8(11059)
 491               	/* #APP */
 492 0130 0197      		1: sbiw r24,1
 493 0132 01F4      		brne 1b
 494               	/* #NOAPP */
 495               	.LBE53:
 496               	.LBE52:
 497               	.LBE51:
 498               	.LBE50:
 499               	.LBE49:
 500               		.stabs	"main.cpp",132,0,0,.Ltext7
 501               	.Ltext7:
  28:main.cpp      ****         	_delay_ms(4);
  29:main.cpp      ****         	c++;
 502               		.stabn	68,0,29,.LM46-.LFBB8
 503               	.LM46:
 504 0134 0894      		sec
 505 0136 E11C      		adc r14,__zero_reg__
 506 0138 F11C      		adc r15,__zero_reg__
 507               	.L58:
 508               		.stabn	68,0,26,.LM47-.LFBB8
 509               	.LM47:
 510 013a 8FEF      		ldi r24,lo8(255)
 511 013c E816      		cp r14,r24
 512 013e F104      		cpc r15,__zero_reg__
 513 0140 04F4      		brge .L57
 514 0142 00C0      		rjmp .L48
 515               	.L50:
  30:main.cpp      ****         }
  31:main.cpp      ****         while (c > 255) {
  32:main.cpp      ****         	led.setvalue(c);
 516               		.stabn	68,0,32,.LM48-.LFBB8
 517               	.LM48:
 518 0144 6E2D      		mov r22,r14
 519 0146 C801      		movw r24,r16
 520 0148 0E94 0000 		call _ZN3PWM8setvalueEh
 521               	.LBB54:
 522               	.LBB55:
 523               	.LBB56:
 524               	.LBB57:
 525               	.LBB58:
 526               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext8
 527               	.Ltext8:
 528               		.stabn	68,0,110,.LM49-.LFBB8
 529               	.LM49:
 530 014c 86E6      		ldi r24,lo8(22118)
 531 014e 96E5      		ldi r25,hi8(22118)
 532               	/* #APP */
 533 0150 0197      		1: sbiw r24,1
 534 0152 01F4      		brne 1b
 535               	/* #NOAPP */
 536               	.LBE58:
 537               	.LBE57:
 538               	.LBE56:
 539               	.LBE55:
GAS LISTING /tmp/ccvwx7q3.s 			page 17


 540               	.LBE54:
 541               		.stabs	"main.cpp",132,0,0,.Ltext9
 542               	.Ltext9:
  33:main.cpp      ****         	_delay_ms(8);
  34:main.cpp      ****         	c--;
 543               		.stabn	68,0,34,.LM50-.LFBB8
 544               	.LM50:
 545 0154 0894      		sec
 546 0156 E108      		sbc r14,__zero_reg__
 547 0158 F108      		sbc r15,__zero_reg__
 548               	.L57:
 549               		.stabn	68,0,31,.LM51-.LFBB8
 550               	.LM51:
 551 015a 8FEF      		ldi r24,lo8(255)
 552 015c E816      		cp r14,r24
 553 015e F104      		cpc r15,__zero_reg__
 554 0160 01F4      		brne .L50
 555               	.L59:
 556 0162 EE24      		clr r14
 557 0164 FF24      		clr r15
 558 0166 00C0      		rjmp .L58
 559               	.LBE43:
 560               	/* epilogue: frame size=2 */
 561               	/* epilogue: noreturn */
 562               	/* epilogue end (size=0) */
 563               	/* function int main() size 70 (66) */
 564               		.size	main, .-main
 565               		.stabs	"led:(0,55)",128,0,14,1
 566               		.stabs	"c:r(0,7)",64,0,15,14
 567               		.stabn	192,0,0,.LBB43-.LFBB8
 568               		.stabs	"__ticks:r(0,28)",64,0,144,18
 569               		.stabn	192,0,0,.LBB46-.LFBB8
 570               		.stabs	"__count:r(0,28)",64,0,155,24
 571               		.stabn	192,0,0,.LBB47-.LFBB8
 572               		.stabn	224,0,0,.LBE47-.LFBB8
 573               		.stabn	224,0,0,.LBE46-.LFBB8
 574               		.stabs	"__count:r(0,28)",64,0,162,24
 575               		.stabn	192,0,0,.LBB52-.LFBB8
 576               		.stabn	224,0,0,.LBE52-.LFBB8
 577               		.stabs	"__count:r(0,28)",64,0,162,24
 578               		.stabn	192,0,0,.LBB57-.LFBB8
 579               		.stabn	224,0,0,.LBE57-.LFBB8
 580               		.stabn	224,0,0,.LBE43-.LFBB8
 581               	.Lscope8:
 582               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 583               		.stabd	78,0,0
 584               		.stabs	"_ZN3PWMC2Eh:F(0,2)",36,0,21,_ZN3PWMC2Eh
 585               		.stabs	"this:P(0,59)",64,0,21,30
 586               		.stabs	"n:P(0,26)",64,0,21,22
 587               	.global	_ZN3PWMC2Eh
 588               		.type	_ZN3PWMC2Eh, @function
 589               	_ZN3PWMC2Eh:
 590               		.stabd	46,0,0
 591               		.stabs	"PWM.h",132,0,0,.Ltext10
 592               	.Ltext10:
 593               		.stabn	68,0,21,.LM52-.LFBB9
 594               	.LM52:
GAS LISTING /tmp/ccvwx7q3.s 			page 18


 595               	.LFBB9:
 596               	/* prologue: frame size=0 */
 597               	/* prologue end (size=0) */
 598 0168 FC01      		movw r30,r24
 599               	.LBB66:
 600               		.stabn	68,0,22,.LM53-.LFBB9
 601               	.LM53:
 602 016a 6230      		cpi r22,lo8(2)
 603 016c 00F4      		brsh .L61
 604               		.stabn	68,0,22,.LM54-.LFBB9
 605               	.LM54:
 606 016e 1082      		st Z,__zero_reg__
 607               	.L61:
 608               		.stabn	68,0,23,.LM55-.LFBB9
 609               	.LM55:
 610 0170 862F      		mov r24,r22
 611 0172 8250      		subi r24,lo8(-(-2))
 612 0174 8230      		cpi r24,lo8(2)
 613 0176 00F4      		brsh .L63
 614 0178 81E0      		ldi r24,lo8(1)
 615 017a 8083      		st Z,r24
 616               	.L63:
 617               		.stabn	68,0,24,.LM56-.LFBB9
 618               	.LM56:
 619 017c 862F      		mov r24,r22
 620 017e 8450      		subi r24,lo8(-(-4))
 621 0180 8230      		cpi r24,lo8(2)
 622 0182 00F4      		brsh .L65
 623 0184 82E0      		ldi r24,lo8(2)
 624 0186 8083      		st Z,r24
 625               	.L65:
 626               		.stabn	68,0,25,.LM57-.LFBB9
 627               	.LM57:
 628 0188 6623      		tst r22
 629 018a 01F0      		breq .L67
 630 018c 6230      		cpi r22,lo8(2)
 631 018e 01F0      		breq .L67
 632 0190 6430      		cpi r22,lo8(4)
 633 0192 01F4      		brne .L70
 634               	.L67:
 635 0194 81E0      		ldi r24,lo8(1)
 636 0196 00C0      		rjmp .L77
 637               	.L70:
 638               		.stabn	68,0,26,.LM58-.LFBB9
 639               	.LM58:
 640 0198 82E0      		ldi r24,lo8(2)
 641               	.L77:
 642 019a 8183      		std Z+1,r24
 643               		.stabn	68,0,27,.LM59-.LFBB9
 644               	.LM59:
 645 019c 8081      		ld r24,Z
 646 019e 8130      		cpi r24,lo8(1)
 647 01a0 01F0      		breq .L74
 648 01a2 8130      		cpi r24,lo8(1)
 649 01a4 00F0      		brlo .L73
 650 01a6 8230      		cpi r24,lo8(2)
 651 01a8 01F4      		brne .L76
GAS LISTING /tmp/ccvwx7q3.s 			page 19


 652 01aa 00C0      		rjmp .L75
 653               	.L73:
 654               	.LBB67:
 655               	.LBB68:
 656               		.stabn	68,0,64,.LM60-.LFBB9
 657               	.LM60:
 658 01ac 83EA      		ldi r24,lo8(-93)
 659 01ae 84BD      		out 68-0x20,r24
 660               		.stabn	68,0,65,.LM61-.LFBB9
 661               	.LM61:
 662 01b0 81E0      		ldi r24,lo8(1)
 663 01b2 85BD      		out 69-0x20,r24
 664 01b4 0895      		ret
 665               	.L74:
 666               	.LBE68:
 667               	.LBE67:
 668               	.LBB69:
 669               	.LBB70:
 670               		.stabn	68,0,69,.LM62-.LFBB9
 671               	.LM62:
 672 01b6 81EA      		ldi r24,lo8(-95)
 673 01b8 8093 8000 		sts 128,r24
 674               		.stabn	68,0,70,.LM63-.LFBB9
 675               	.LM63:
 676 01bc 89E0      		ldi r24,lo8(9)
 677 01be 8093 8100 		sts 129,r24
 678 01c2 0895      		ret
 679               	.L75:
 680               	.LBE70:
 681               	.LBE69:
 682               	.LBB71:
 683               	.LBB72:
 684               		.stabn	68,0,74,.LM64-.LFBB9
 685               	.LM64:
 686 01c4 83EA      		ldi r24,lo8(-93)
 687 01c6 84BD      		out 68-0x20,r24
 688               		.stabn	68,0,75,.LM65-.LFBB9
 689               	.LM65:
 690 01c8 81E0      		ldi r24,lo8(1)
 691 01ca 85BD      		out 69-0x20,r24
 692               	.L76:
 693 01cc 0895      		ret
 694               	.LBE72:
 695               	.LBE71:
 696               	.LBE66:
 697               	/* epilogue: frame size=0 */
 698               	/* epilogue: noreturn */
 699               	/* epilogue end (size=0) */
 700               	/* function PWM::PWM(uint8_t) size 51 (51) */
 701               		.size	_ZN3PWMC2Eh, .-_ZN3PWMC2Eh
 702               	.Lscope9:
 703               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 704               		.stabd	78,0,0
 705               		.stabs	"_ZN3PWM5setTCEh:F(0,2)",36,0,33,_ZN3PWM5setTCEh
 706               		.stabs	"this:P(0,59)",64,0,33,30
 707               		.stabs	"n:P(0,26)",64,0,33,22
 708               	.global	_ZN3PWM5setTCEh
GAS LISTING /tmp/ccvwx7q3.s 			page 20


 709               		.type	_ZN3PWM5setTCEh, @function
 710               	_ZN3PWM5setTCEh:
 711               		.stabd	46,0,0
 712               		.stabn	68,0,33,.LM66-.LFBB10
 713               	.LM66:
 714               	.LFBB10:
 715               	/* prologue: frame size=0 */
 716               	/* prologue end (size=0) */
 717 01ce FC01      		movw r30,r24
 718               		.stabn	68,0,34,.LM67-.LFBB10
 719               	.LM67:
 720 01d0 6230      		cpi r22,lo8(2)
 721 01d2 00F4      		brsh .L79
 722               		.stabn	68,0,34,.LM68-.LFBB10
 723               	.LM68:
 724 01d4 1082      		st Z,__zero_reg__
 725               	.L79:
 726               		.stabn	68,0,35,.LM69-.LFBB10
 727               	.LM69:
 728 01d6 862F      		mov r24,r22
 729 01d8 8250      		subi r24,lo8(-(-2))
 730 01da 8230      		cpi r24,lo8(2)
 731 01dc 00F4      		brsh .L81
 732 01de 81E0      		ldi r24,lo8(1)
 733 01e0 8083      		st Z,r24
 734               	.L81:
 735               		.stabn	68,0,36,.LM70-.LFBB10
 736               	.LM70:
 737 01e2 862F      		mov r24,r22
 738 01e4 8450      		subi r24,lo8(-(-4))
 739 01e6 8230      		cpi r24,lo8(2)
 740 01e8 00F4      		brsh .L83
 741 01ea 82E0      		ldi r24,lo8(2)
 742 01ec 8083      		st Z,r24
 743               	.L83:
 744               		.stabn	68,0,37,.LM71-.LFBB10
 745               	.LM71:
 746 01ee 6623      		tst r22
 747 01f0 01F0      		breq .L85
 748 01f2 6230      		cpi r22,lo8(2)
 749 01f4 01F0      		breq .L85
 750 01f6 6430      		cpi r22,lo8(4)
 751 01f8 01F4      		brne .L88
 752               	.L85:
 753 01fa 81E0      		ldi r24,lo8(1)
 754 01fc 00C0      		rjmp .L95
 755               	.L88:
 756               		.stabn	68,0,38,.LM72-.LFBB10
 757               	.LM72:
 758 01fe 82E0      		ldi r24,lo8(2)
 759               	.L95:
 760 0200 8183      		std Z+1,r24
 761               		.stabn	68,0,39,.LM73-.LFBB10
 762               	.LM73:
 763 0202 8081      		ld r24,Z
 764 0204 8130      		cpi r24,lo8(1)
 765 0206 01F0      		breq .L92
GAS LISTING /tmp/ccvwx7q3.s 			page 21


 766 0208 8130      		cpi r24,lo8(1)
 767 020a 00F0      		brlo .L91
 768 020c 8230      		cpi r24,lo8(2)
 769 020e 01F4      		brne .L94
 770 0210 00C0      		rjmp .L93
 771               	.L91:
 772               	.LBB79:
 773               	.LBB80:
 774               		.stabn	68,0,64,.LM74-.LFBB10
 775               	.LM74:
 776 0212 83EA      		ldi r24,lo8(-93)
 777 0214 84BD      		out 68-0x20,r24
 778               		.stabn	68,0,65,.LM75-.LFBB10
 779               	.LM75:
 780 0216 81E0      		ldi r24,lo8(1)
 781 0218 85BD      		out 69-0x20,r24
 782 021a 0895      		ret
 783               	.L92:
 784               	.LBE80:
 785               	.LBE79:
 786               	.LBB81:
 787               	.LBB82:
 788               		.stabn	68,0,69,.LM76-.LFBB10
 789               	.LM76:
 790 021c 81EA      		ldi r24,lo8(-95)
 791 021e 8093 8000 		sts 128,r24
 792               		.stabn	68,0,70,.LM77-.LFBB10
 793               	.LM77:
 794 0222 89E0      		ldi r24,lo8(9)
 795 0224 8093 8100 		sts 129,r24
 796 0228 0895      		ret
 797               	.L93:
 798               	.LBE82:
 799               	.LBE81:
 800               	.LBB83:
 801               	.LBB84:
 802               		.stabn	68,0,74,.LM78-.LFBB10
 803               	.LM78:
 804 022a 83EA      		ldi r24,lo8(-93)
 805 022c 84BD      		out 68-0x20,r24
 806               		.stabn	68,0,75,.LM79-.LFBB10
 807               	.LM79:
 808 022e 81E0      		ldi r24,lo8(1)
 809 0230 85BD      		out 69-0x20,r24
 810               	.L94:
 811 0232 0895      		ret
 812               	.LBE84:
 813               	.LBE83:
 814               	/* epilogue: frame size=0 */
 815               	/* epilogue: noreturn */
 816               	/* epilogue end (size=0) */
 817               	/* function void PWM::setTC(uint8_t) size 51 (51) */
 818               		.size	_ZN3PWM5setTCEh, .-_ZN3PWM5setTCEh
 819               	.Lscope10:
 820               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 821               		.stabd	78,0,0
 822               		.stabs	"",100,0,0,.Letext0
GAS LISTING /tmp/ccvwx7q3.s 			page 22


 823               	.Letext0:
 824               	/* File "main.cpp": code  290 = 0x0122 ( 281), prologues   4, epilogues   5 */
GAS LISTING /tmp/ccvwx7q3.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccvwx7q3.s:2      *ABS*:0000003f __SREG__
     /tmp/ccvwx7q3.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccvwx7q3.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccvwx7q3.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccvwx7q3.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccvwx7q3.s:76     .text:00000000 _ZN3PWMC2Ev
     /tmp/ccvwx7q3.s:97     .text:00000002 _ZN3PWMC1Ev
     /tmp/ccvwx7q3.s:117    .text:00000004 _ZN3PWMC1Eh
     /tmp/ccvwx7q3.s:236    .text:0000006a _ZN3PWM8setvalueEh
     /tmp/ccvwx7q3.s:320    .text:000000ca _ZN3PWM6initT0Ev
     /tmp/ccvwx7q3.s:347    .text:000000d4 _ZN3PWM6initT1Ev
     /tmp/ccvwx7q3.s:374    .text:000000e2 _ZN3PWM6initT2Ev
     /tmp/ccvwx7q3.s:400    .text:000000ec main
     /tmp/ccvwx7q3.s:589    .text:00000168 _ZN3PWMC2Eh
     /tmp/ccvwx7q3.s:710    .text:000001ce _ZN3PWM5setTCEh

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__stack
