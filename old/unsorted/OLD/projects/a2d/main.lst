GAS LISTING /tmp/cco8gfjJ.s 			page 1


   1               		.file	"main.cpp"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
   9               		.stabs	"/home/nathaniel/programming/AVR_code/projects/a2d/",100,0,4,.Ltext0
  10               		.stabs	"main.cpp",100,0,4,.Ltext0
  11               		.text
  12               	.Ltext0:
  13               		.stabs	"gcc2_compiled.",60,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,1)=*(0,2)=(0,2)",128,0,0,0
  15               		.stabs	"complex long double:t(0,3)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,4)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,5)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,6)=s4real:(0,7)=r(0,7);-32768;32767;,0,16;imag:(0,7),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,8)=@s64;r(0,8);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,9)=@s32;r(0,9);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,10)=r(0,10);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,12)=@s64;r(0,12);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,13)=@s32;r(0,13);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,7)",128,0,0,0
  26               		.stabs	"signed char:t(0,14)=@s8;r(0,14);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,15)=@s8;r(0,15);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,7)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,9)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,8)",128,0,0,0
  31               		.stabs	"short int:t(0,16)=r(0,16);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,17)=r(0,17);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,17)",128,0,0,0
  34               		.stabs	"float:t(0,18)=r(0,7);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,19)=r(0,7);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,20)=r(0,7);4;0;",128,0,0,0
  37               		.stabs	"void:t(0,2)",128,0,0,0
  38               		.stabs	"wchar_t:t(0,21)=r(0,21);-32768;32767;",128,0,0,0
  39               		.stabs	"bool:t(0,22)=@s8;-16;",128,0,0,0
  40               		.stabs	"__vtbl_ptr_type:t(0,23)=*(0,24)=f(0,7)",128,0,0,0
  41               		.stabs	"int8_t:t(0,25)=(0,14)",128,0,121,0
  42               		.stabs	"uint8_t:t(0,26)=(0,11)",128,0,122,0
  43               		.stabs	"int16_t:t(0,27)=(0,7)",128,0,123,0
  44               		.stabs	"uint16_t:t(0,28)=(0,10)",128,0,124,0
  45               		.stabs	"int32_t:t(0,29)=(0,13)",128,0,125,0
  46               		.stabs	"uint32_t:t(0,30)=(0,9)",128,0,126,0
  47               		.stabs	"int64_t:t(0,31)=(0,12)",128,0,128,0
  48               		.stabs	"uint64_t:t(0,32)=(0,8)",128,0,129,0
  49               		.stabs	"intptr_t:t(0,33)=(0,27)",128,0,142,0
  50               		.stabs	"uintptr_t:t(0,34)=(0,28)",128,0,147,0
  51               		.stabs	"int_least8_t:t(0,35)=(0,25)",128,0,159,0
  52               		.stabs	"uint_least8_t:t(0,36)=(0,26)",128,0,164,0
  53               		.stabs	"int_least16_t:t(0,37)=(0,27)",128,0,169,0
  54               		.stabs	"uint_least16_t:t(0,38)=(0,28)",128,0,174,0
  55               		.stabs	"int_least32_t:t(0,39)=(0,29)",128,0,179,0
  56               		.stabs	"uint_least32_t:t(0,40)=(0,30)",128,0,184,0
  57               		.stabs	"int_least64_t:t(0,41)=(0,31)",128,0,192,0
GAS LISTING /tmp/cco8gfjJ.s 			page 2


  58               		.stabs	"uint_least64_t:t(0,42)=(0,32)",128,0,199,0
  59               		.stabs	"int_fast8_t:t(0,43)=(0,25)",128,0,213,0
  60               		.stabs	"uint_fast8_t:t(0,44)=(0,26)",128,0,218,0
  61               		.stabs	"int_fast16_t:t(0,45)=(0,27)",128,0,223,0
  62               		.stabs	"uint_fast16_t:t(0,46)=(0,28)",128,0,228,0
  63               		.stabs	"int_fast32_t:t(0,47)=(0,29)",128,0,233,0
  64               		.stabs	"uint_fast32_t:t(0,48)=(0,30)",128,0,238,0
  65               		.stabs	"int_fast64_t:t(0,49)=(0,31)",128,0,246,0
  66               		.stabs	"uint_fast64_t:t(0,50)=(0,32)",128,0,253,0
  67               		.stabs	"intmax_t:t(0,51)=(0,31)",128,0,273,0
  68               		.stabs	"uintmax_t:t(0,52)=(0,32)",128,0,278,0
  69               		.stabs	"int_farptr_t:t(0,53)=(0,29)",128,0,77,0
  70               		.stabs	"uint_farptr_t:t(0,54)=(0,30)",128,0,81,0
  71               		.stabs	"A2D:Tt(0,55)=s1channel:/0(0,26),0,8;__base_ctor ::(0,56)=#(0,55),(0,2),(0,57)=*(0,55),(0,2
  72               		.stabs	"_ZN3A2DC2Ev:F(0,2)",36,0,14,_ZN3A2DC2Ev
  73               		.stabs	"this:P(0,61)=k(0,57)",64,0,14,30
  74               	.global	_ZN3A2DC2Ev
  75               		.type	_ZN3A2DC2Ev, @function
  76               	_ZN3A2DC2Ev:
  77               		.stabd	46,0,0
  78               		.stabs	"A2D.h",132,0,0,.Ltext1
  79               	.Ltext1:
   1:A2D.h         **** #include <avr/io.h>
   2:A2D.h         **** #include <stdint.h>
   3:A2D.h         **** 
   4:A2D.h         **** class A2D {
   5:A2D.h         ****     uint8_t channel;
   6:A2D.h         **** public:
   7:A2D.h         ****     A2D();
   8:A2D.h         ****     A2D(uint8_t ch);
   9:A2D.h         ****     void changeCH(uint8_t ch);
  10:A2D.h         ****     uint16_t getValue10();
  11:A2D.h         ****     uint8_t getValue8();
  12:A2D.h         **** };
  13:A2D.h         **** 
  14:A2D.h         **** A2D::A2D() {
  80               		.stabn	68,0,14,.LM0-.LFBB1
  81               	.LM0:
  82               	.LFBB1:
  83               	/* prologue: frame size=0 */
  84               	/* prologue end (size=0) */
  85 0000 FC01      		movw r30,r24
  86               	.LBB7:
  15:A2D.h         **** 	channel = 0;
  87               		.stabn	68,0,15,.LM1-.LFBB1
  88               	.LM1:
  89 0002 1082      		st Z,__zero_reg__
  90               	.LBE7:
  91               	/* epilogue: frame size=0 */
  92 0004 0895      		ret
  93               	/* epilogue end (size=1) */
  94               	/* function A2D::A2D() size 3 (2) */
  95               		.size	_ZN3A2DC2Ev, .-_ZN3A2DC2Ev
  96               	.Lscope1:
  97               		.stabs	"",36,0,0,.Lscope1-.LFBB1
  98               		.stabd	78,0,0
  99               		.stabs	"_ZN3A2DC1Ev:F(0,2)",36,0,14,_ZN3A2DC1Ev
GAS LISTING /tmp/cco8gfjJ.s 			page 3


 100               		.stabs	"this:P(0,61)",64,0,14,30
 101               	.global	_ZN3A2DC1Ev
 102               		.type	_ZN3A2DC1Ev, @function
 103               	_ZN3A2DC1Ev:
 104               		.stabd	46,0,0
 105               		.stabn	68,0,14,.LM2-.LFBB2
 106               	.LM2:
 107               	.LFBB2:
 108               	/* prologue: frame size=0 */
 109               	/* prologue end (size=0) */
 110 0006 FC01      		movw r30,r24
 111               	.LBB8:
 112               		.stabn	68,0,15,.LM3-.LFBB2
 113               	.LM3:
 114 0008 1082      		st Z,__zero_reg__
 115               	.LBE8:
 116               	/* epilogue: frame size=0 */
 117 000a 0895      		ret
 118               	/* epilogue end (size=1) */
 119               	/* function A2D::A2D() size 3 (2) */
 120               		.size	_ZN3A2DC1Ev, .-_ZN3A2DC1Ev
 121               	.Lscope2:
 122               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 123               		.stabd	78,0,0
 124               		.stabs	"_ZN3A2DC2Eh:F(0,2)",36,0,18,_ZN3A2DC2Eh
 125               		.stabs	"this:P(0,61)",64,0,18,30
 126               		.stabs	"ch:P(0,26)",64,0,18,22
 127               	.global	_ZN3A2DC2Eh
 128               		.type	_ZN3A2DC2Eh, @function
 129               	_ZN3A2DC2Eh:
 130               		.stabd	46,0,0
  16:A2D.h         **** }
  17:A2D.h         **** 
  18:A2D.h         **** A2D::A2D(uint8_t ch) {
 131               		.stabn	68,0,18,.LM4-.LFBB3
 132               	.LM4:
 133               	.LFBB3:
 134               	/* prologue: frame size=0 */
 135               	/* prologue end (size=0) */
 136 000c FC01      		movw r30,r24
 137               	.LBB9:
  19:A2D.h         **** 	channel = ch;
 138               		.stabn	68,0,19,.LM5-.LFBB3
 139               	.LM5:
 140 000e 6083      		st Z,r22
  20:A2D.h         **** 	ADMUX = (1 << REFS0);
 141               		.stabn	68,0,20,.LM6-.LFBB3
 142               	.LM6:
 143 0010 80E4      		ldi r24,lo8(64)
 144 0012 8093 7C00 		sts 124,r24
  21:A2D.h         **** 	ADCSRA = (6 << ADPS0);
 145               		.stabn	68,0,21,.LM7-.LFBB3
 146               	.LM7:
 147 0016 EAE7      		ldi r30,lo8(122)
 148 0018 F0E0      		ldi r31,hi8(122)
 149 001a 86E0      		ldi r24,lo8(6)
 150 001c 8083      		st Z,r24
GAS LISTING /tmp/cco8gfjJ.s 			page 4


  22:A2D.h         **** 	ADCSRA |= (1 << ADEN);	
 151               		.stabn	68,0,22,.LM8-.LFBB3
 152               	.LM8:
 153 001e 8081      		ld r24,Z
 154 0020 8068      		ori r24,lo8(-128)
 155 0022 8083      		st Z,r24
 156               	.LBE9:
 157               	/* epilogue: frame size=0 */
 158 0024 0895      		ret
 159               	/* epilogue end (size=1) */
 160               	/* function A2D::A2D(uint8_t) size 13 (12) */
 161               		.size	_ZN3A2DC2Eh, .-_ZN3A2DC2Eh
 162               	.Lscope3:
 163               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 164               		.stabd	78,0,0
 165               		.stabs	"_ZN3A2DC1Eh:F(0,2)",36,0,18,_ZN3A2DC1Eh
 166               		.stabs	"this:P(0,61)",64,0,18,30
 167               		.stabs	"ch:P(0,26)",64,0,18,22
 168               	.global	_ZN3A2DC1Eh
 169               		.type	_ZN3A2DC1Eh, @function
 170               	_ZN3A2DC1Eh:
 171               		.stabd	46,0,0
 172               		.stabn	68,0,18,.LM9-.LFBB4
 173               	.LM9:
 174               	.LFBB4:
 175               	/* prologue: frame size=0 */
 176               	/* prologue end (size=0) */
 177 0026 FC01      		movw r30,r24
 178               	.LBB10:
 179               		.stabn	68,0,19,.LM10-.LFBB4
 180               	.LM10:
 181 0028 6083      		st Z,r22
 182               		.stabn	68,0,20,.LM11-.LFBB4
 183               	.LM11:
 184 002a 80E4      		ldi r24,lo8(64)
 185 002c 8093 7C00 		sts 124,r24
 186               		.stabn	68,0,21,.LM12-.LFBB4
 187               	.LM12:
 188 0030 EAE7      		ldi r30,lo8(122)
 189 0032 F0E0      		ldi r31,hi8(122)
 190 0034 86E0      		ldi r24,lo8(6)
 191 0036 8083      		st Z,r24
 192               		.stabn	68,0,22,.LM13-.LFBB4
 193               	.LM13:
 194 0038 8081      		ld r24,Z
 195 003a 8068      		ori r24,lo8(-128)
 196 003c 8083      		st Z,r24
 197               	.LBE10:
 198               	/* epilogue: frame size=0 */
 199 003e 0895      		ret
 200               	/* epilogue end (size=1) */
 201               	/* function A2D::A2D(uint8_t) size 13 (12) */
 202               		.size	_ZN3A2DC1Eh, .-_ZN3A2DC1Eh
 203               	.Lscope4:
 204               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 205               		.stabd	78,0,0
 206               		.stabs	"_ZN3A2D8changeCHEh:F(0,2)",36,0,25,_ZN3A2D8changeCHEh
GAS LISTING /tmp/cco8gfjJ.s 			page 5


 207               		.stabs	"this:P(0,61)",64,0,25,30
 208               		.stabs	"ch:P(0,26)",64,0,25,22
 209               	.global	_ZN3A2D8changeCHEh
 210               		.type	_ZN3A2D8changeCHEh, @function
 211               	_ZN3A2D8changeCHEh:
 212               		.stabd	46,0,0
  23:A2D.h         **** }
  24:A2D.h         **** 
  25:A2D.h         **** void A2D::changeCH(uint8_t ch) {
 213               		.stabn	68,0,25,.LM14-.LFBB5
 214               	.LM14:
 215               	.LFBB5:
 216               	/* prologue: frame size=0 */
 217               	/* prologue end (size=0) */
 218 0040 FC01      		movw r30,r24
  26:A2D.h         **** 	channel = ch;
 219               		.stabn	68,0,26,.LM15-.LFBB5
 220               	.LM15:
 221 0042 6083      		st Z,r22
  27:A2D.h         **** 	ADMUX = (1 << REFS0);
 222               		.stabn	68,0,27,.LM16-.LFBB5
 223               	.LM16:
 224 0044 80E4      		ldi r24,lo8(64)
 225 0046 8093 7C00 		sts 124,r24
  28:A2D.h         **** 	ADCSRA = (6 << ADPS0);
 226               		.stabn	68,0,28,.LM17-.LFBB5
 227               	.LM17:
 228 004a EAE7      		ldi r30,lo8(122)
 229 004c F0E0      		ldi r31,hi8(122)
 230 004e 86E0      		ldi r24,lo8(6)
 231 0050 8083      		st Z,r24
  29:A2D.h         **** 	ADCSRA |= (1 << ADEN);	
 232               		.stabn	68,0,29,.LM18-.LFBB5
 233               	.LM18:
 234 0052 8081      		ld r24,Z
 235 0054 8068      		ori r24,lo8(-128)
 236 0056 8083      		st Z,r24
 237               	/* epilogue: frame size=0 */
 238 0058 0895      		ret
 239               	/* epilogue end (size=1) */
 240               	/* function void A2D::changeCH(uint8_t) size 13 (12) */
 241               		.size	_ZN3A2D8changeCHEh, .-_ZN3A2D8changeCHEh
 242               	.Lscope5:
 243               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 244               		.stabd	78,0,0
 245               		.stabs	"_ZN3A2D10getValue10Ev:F(0,28)",36,0,32,_ZN3A2D10getValue10Ev
 246               		.stabs	"this:P(0,61)",64,0,32,30
 247               	.global	_ZN3A2D10getValue10Ev
 248               		.type	_ZN3A2D10getValue10Ev, @function
 249               	_ZN3A2D10getValue10Ev:
 250               		.stabd	46,0,0
  30:A2D.h         **** }
  31:A2D.h         **** 
  32:A2D.h         **** uint16_t A2D::getValue10() {
 251               		.stabn	68,0,32,.LM19-.LFBB6
 252               	.LM19:
 253               	.LFBB6:
GAS LISTING /tmp/cco8gfjJ.s 			page 6


 254               	/* prologue: frame size=0 */
 255               	/* prologue end (size=0) */
 256 005a FC01      		movw r30,r24
  33:A2D.h         **** 	ADMUX &= ~0x1F;
 257               		.stabn	68,0,33,.LM20-.LFBB6
 258               	.LM20:
 259 005c 8091 7C00 		lds r24,124
 260 0060 807E      		andi r24,lo8(-32)
 261 0062 8093 7C00 		sts 124,r24
  34:A2D.h         **** 	ADMUX |= channel;
 262               		.stabn	68,0,34,.LM21-.LFBB6
 263               	.LM21:
 264 0066 8091 7C00 		lds r24,124
 265 006a 9081      		ld r25,Z
 266 006c 892B      		or r24,r25
 267 006e 8093 7C00 		sts 124,r24
  35:A2D.h         **** 	ADCSRA |= (1 << ADSC);
 268               		.stabn	68,0,35,.LM22-.LFBB6
 269               	.LM22:
 270 0072 8091 7A00 		lds r24,122
 271 0076 8064      		ori r24,lo8(64)
 272 0078 8093 7A00 		sts 122,r24
 273               	.L12:
  36:A2D.h         **** 	while (bit_is_set(ADCSRA, ADSC));
 274               		.stabn	68,0,36,.LM23-.LFBB6
 275               	.LM23:
 276 007c 8091 7A00 		lds r24,122
 277 0080 86FD      		sbrc r24,6
 278 0082 00C0      		rjmp .L12
  37:A2D.h         **** 	return (ADCL | ADCH << 8);
 279               		.stabn	68,0,37,.LM24-.LFBB6
 280               	.LM24:
 281 0084 2091 7800 		lds r18,120
 282 0088 8091 7900 		lds r24,121
 283 008c 9927      		clr r25
 284 008e 982F      		mov r25,r24
 285 0090 8827      		clr r24
 286 0092 3327      		clr r19
  38:A2D.h         **** }	
 287               		.stabn	68,0,38,.LM25-.LFBB6
 288               	.LM25:
 289 0094 822B      		or r24,r18
 290 0096 932B      		or r25,r19
 291               	/* epilogue: frame size=0 */
 292 0098 0895      		ret
 293               	/* epilogue end (size=1) */
 294               	/* function uint16_t A2D::getValue10() size 32 (31) */
 295               		.size	_ZN3A2D10getValue10Ev, .-_ZN3A2D10getValue10Ev
 296               	.Lscope6:
 297               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 298               		.stabd	78,0,0
 299               		.stabs	"_ZN3A2D9getValue8Ev:F(0,26)",36,0,40,_ZN3A2D9getValue8Ev
 300               		.stabs	"this:P(0,61)",64,0,40,24
 301               	.global	_ZN3A2D9getValue8Ev
 302               		.type	_ZN3A2D9getValue8Ev, @function
 303               	_ZN3A2D9getValue8Ev:
 304               		.stabd	46,0,0
GAS LISTING /tmp/cco8gfjJ.s 			page 7


  39:A2D.h         **** 
  40:A2D.h         **** uint8_t A2D::getValue8() {	
 305               		.stabn	68,0,40,.LM26-.LFBB7
 306               	.LM26:
 307               	.LFBB7:
 308               	/* prologue: frame size=0 */
 309               	/* prologue end (size=0) */
  41:A2D.h         **** 	return((getValue10() >> 2) & 0xFF);
 310               		.stabn	68,0,41,.LM27-.LFBB7
 311               	.LM27:
 312 009a 0E94 0000 		call _ZN3A2D10getValue10Ev
 313 009e 9695      		lsr r25
 314 00a0 8795      		ror r24
 315 00a2 9695      		lsr r25
 316 00a4 8795      		ror r24
  42:A2D.h         **** }    
 317               		.stabn	68,0,42,.LM28-.LFBB7
 318               	.LM28:
 319 00a6 9927      		clr r25
 320               	/* epilogue: frame size=0 */
 321 00a8 0895      		ret
 322               	/* epilogue end (size=1) */
 323               	/* function uint8_t A2D::getValue8() size 8 (7) */
 324               		.size	_ZN3A2D9getValue8Ev, .-_ZN3A2D9getValue8Ev
 325               	.Lscope7:
 326               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 327               		.stabd	78,0,0
 328               		.stabs	"main:F(0,7)",36,0,5,main
 329               	.global	main
 330               		.type	main, @function
 331               	main:
 332               		.stabd	46,0,0
 333               		.stabs	"main.cpp",132,0,0,.Ltext2
 334               	.Ltext2:
   1:main.cpp      **** #define F_CPU 11059200
   2:main.cpp      **** #include <util/delay.h>
   3:main.cpp      **** #include "A2D.h"
   4:main.cpp      **** 
   5:main.cpp      **** int main () {
 335               		.stabn	68,0,5,.LM29-.LFBB8
 336               	.LM29:
 337               	.LFBB8:
 338               	/* prologue: frame size=1 */
 339 00aa C0E0      		ldi r28,lo8(__stack - 1)
 340 00ac D0E0      		ldi r29,hi8(__stack - 1)
 341 00ae DEBF      		out __SP_H__,r29
 342 00b0 CDBF      		out __SP_L__,r28
 343               	/* prologue end (size=4) */
 344               	.LBB26:
   6:main.cpp      **** 	A2D ch1(0);
 345               		.stabn	68,0,6,.LM30-.LFBB8
 346               	.LM30:
 347 00b2 60E0      		ldi r22,lo8(0)
 348 00b4 8E01      		movw r16,r28
 349 00b6 0F5F      		subi r16,lo8(-(1))
 350 00b8 1F4F      		sbci r17,hi8(-(1))
 351 00ba C801      		movw r24,r16
GAS LISTING /tmp/cco8gfjJ.s 			page 8


 352 00bc 0E94 0000 		call _ZN3A2DC1Eh
 353               	.L20:
   7:main.cpp      **** 	while (1) {
   8:main.cpp      **** 		ch1.getValue8();
 354               		.stabn	68,0,8,.LM31-.LFBB8
 355               	.LM31:
 356 00c0 C801      		movw r24,r16
 357 00c2 0E94 0000 		call _ZN3A2D9getValue8Ev
 358 00c6 28EE      		ldi r18,lo8(1000)
 359 00c8 33E0      		ldi r19,hi8(1000)
 360               	.L21:
 361               	.LBB27:
 362               	.LBB28:
 363               	.LBB29:
 364               	.LBB30:
 365               	.LBB31:
 366               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 367               	.Ltext3:
   1:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
   5:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
   8:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  11:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  16:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  20:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  32:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  34:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  37:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  39:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \file */
GAS LISTING /tmp/cco8gfjJ.s 			page 9


  40:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     \code
  42:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     \endcode
  44:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  45:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  53:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  60:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  62:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** */
  63:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  64:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** #endif
  68:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  69:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  71:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  77:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** */
  80:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** void
  81:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** {
  83:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** }
  90:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  91:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  93:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
GAS LISTING /tmp/cco8gfjJ.s 			page 10


  97:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 
  99:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h ****  */
 102:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** void
 103:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** {
 105:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 106:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"1: sbiw %0,1" "\n\t"
 107:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
 108:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "=w" (__count)
 109:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
 110:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h **** 	);
 368               		.stabn	68,0,110,.LM32-.LFBB8
 369               	.LM32:
 370 00ca 84E1      		ldi r24,lo8(276)
 371 00cc 91E0      		ldi r25,hi8(276)
 372               	/* #APP */
 373 00ce 0197      		1: sbiw r24,1
 374 00d0 01F4      		brne 1b
 375               	/* #NOAPP */
 376               	.LBE31:
 377               	.LBE30:
 378               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h",132,0,0,.Ltext4
 379               	.Ltext4:
   1:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
   6:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
   9:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  12:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  17:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  21:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
GAS LISTING /tmp/cco8gfjJ.s 			page 11


  32:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  33:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  35:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  38:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  41:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /** \file */
  42:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \code
  44:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \endcode
  48:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  49:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     used.
  53:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  54:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  63:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  72:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  76:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** */
  77:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  78:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  82:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  83:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  88:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/cco8gfjJ.s 			page 12


  89:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** #endif
  92:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  93:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /**
  94:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  96:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
  97:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
  98:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 101:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 103:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    will not be informed about this case.
 106:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****  */
 107:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** void
 108:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** _delay_us(double __us)
 109:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** {
 110:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 114:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	{
 116:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		return;
 118:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	}
 119:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else
 120:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** }
 123:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 124:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 125:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** /**
 126:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 127:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 128:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 130:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 133:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 
 135:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h ****  */
 141:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** void
 142:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** {
 144:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
GAS LISTING /tmp/cco8gfjJ.s 			page 13


 146:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 147:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 148:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 149:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 	{
 150:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 152:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		while(__ticks)
 153:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 		{
 154:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h **** 			__ticks --;
 380               		.stabn	68,0,156,.LM33-.LFBB8
 381               	.LM33:
 382 00d2 2150      		subi r18,lo8(-(-1))
 383 00d4 3040      		sbci r19,hi8(-(-1))
 384               		.stabn	68,0,152,.LM34-.LFBB8
 385               	.LM34:
 386 00d6 01F4      		brne .L21
 387               	.LBE29:
 388               	.LBE28:
 389               	.LBE27:
 390               		.stabs	"main.cpp",132,0,0,.Ltext5
 391               	.Ltext5:
   9:main.cpp      **** 		_delay_ms(100);
  10:main.cpp      **** 		ch1.getValue10();
 392               		.stabn	68,0,10,.LM35-.LFBB8
 393               	.LM35:
 394 00d8 C801      		movw r24,r16
 395 00da 0E94 0000 		call _ZN3A2D10getValue10Ev
 396 00de 28EE      		ldi r18,lo8(1000)
 397 00e0 33E0      		ldi r19,hi8(1000)
 398               	.L23:
 399               	.LBB32:
 400               	.LBB33:
 401               	.LBB34:
 402               	.LBB35:
 403               	.LBB36:
 404               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext6
 405               	.Ltext6:
 406               		.stabn	68,0,110,.LM36-.LFBB8
 407               	.LM36:
 408 00e2 84E1      		ldi r24,lo8(276)
 409 00e4 91E0      		ldi r25,hi8(276)
 410               	/* #APP */
 411 00e6 0197      		1: sbiw r24,1
 412 00e8 01F4      		brne 1b
 413               	/* #NOAPP */
 414               	.LBE36:
 415               	.LBE35:
 416               		.stabs	"/usr/local/lib/gcc/avr/4.2.0/../../../../avr/include/util/delay.h",132,0,0,.Ltext7
 417               	.Ltext7:
 418               		.stabn	68,0,156,.LM37-.LFBB8
 419               	.LM37:
 420 00ea 2150      		subi r18,lo8(-(-1))
 421 00ec 3040      		sbci r19,hi8(-(-1))
 422               		.stabn	68,0,152,.LM38-.LFBB8
 423               	.LM38:
GAS LISTING /tmp/cco8gfjJ.s 			page 14


 424 00ee 01F4      		brne .L23
 425 00f0 00C0      		rjmp .L20
 426               	.LBE34:
 427               	.LBE33:
 428               	.LBE32:
 429               	.LBE26:
 430               	/* epilogue: frame size=1 */
 431               	/* epilogue: noreturn */
 432               	/* epilogue end (size=0) */
 433               	/* function int main() size 44 (40) */
 434               		.size	main, .-main
 435               		.stabs	"ch1:(0,55)",128,0,6,1
 436               		.stabn	192,0,0,.LBB26-.LFBB8
 437               		.stabs	"__ticks:r(0,28)",64,0,144,18
 438               		.stabn	192,0,0,.LBB29-.LFBB8
 439               		.stabs	"__count:r(0,28)",64,0,155,24
 440               		.stabn	192,0,0,.LBB30-.LFBB8
 441               		.stabn	224,0,0,.LBE30-.LFBB8
 442               		.stabn	224,0,0,.LBE29-.LFBB8
 443               		.stabs	"__ticks:r(0,28)",64,0,144,18
 444               		.stabn	192,0,0,.LBB34-.LFBB8
 445               		.stabs	"__count:r(0,28)",64,0,155,24
 446               		.stabn	192,0,0,.LBB35-.LFBB8
 447               		.stabn	224,0,0,.LBE35-.LFBB8
 448               		.stabn	224,0,0,.LBE34-.LFBB8
 449               		.stabn	224,0,0,.LBE26-.LFBB8
 450               	.Lscope8:
 451               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 452               		.stabd	78,0,0
 453               		.stabs	"",100,0,0,.Letext0
 454               	.Letext0:
 455               	/* File "main.cpp": code  129 = 0x0081 ( 118), prologues   4, epilogues   7 */
GAS LISTING /tmp/cco8gfjJ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cco8gfjJ.s:2      *ABS*:0000003f __SREG__
     /tmp/cco8gfjJ.s:3      *ABS*:0000003e __SP_H__
     /tmp/cco8gfjJ.s:4      *ABS*:0000003d __SP_L__
     /tmp/cco8gfjJ.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cco8gfjJ.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cco8gfjJ.s:76     .text:00000000 _ZN3A2DC2Ev
     /tmp/cco8gfjJ.s:103    .text:00000006 _ZN3A2DC1Ev
     /tmp/cco8gfjJ.s:129    .text:0000000c _ZN3A2DC2Eh
     /tmp/cco8gfjJ.s:170    .text:00000026 _ZN3A2DC1Eh
     /tmp/cco8gfjJ.s:211    .text:00000040 _ZN3A2D8changeCHEh
     /tmp/cco8gfjJ.s:249    .text:0000005a _ZN3A2D10getValue10Ev
     /tmp/cco8gfjJ.s:303    .text:0000009a _ZN3A2D9getValue8Ev
     /tmp/cco8gfjJ.s:331    .text:000000aa main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__stack
